{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Amazonka.PaymentCryptographyData.Types.CardHolderVerificationValue
-- Copyright   : (c) 2013-2023 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Amazonka.PaymentCryptographyData.Types.CardHolderVerificationValue where

import qualified Amazonka.Core as Core
import qualified Amazonka.Core.Lens.Internal as Lens
import qualified Amazonka.Data as Data
import qualified Amazonka.Prelude as Prelude

-- | Card data parameters that are required to generate a cardholder
-- verification value for the payment card.
--
-- /See:/ 'newCardHolderVerificationValue' smart constructor.
data CardHolderVerificationValue = CardHolderVerificationValue'
  { -- | The transaction counter value that comes from a point of sale terminal.
    applicationTransactionCounter :: Prelude.Text,
    -- | A number that identifies and differentiates payment cards with the same
    -- Primary Account Number (PAN).
    panSequenceNumber :: Prelude.Text,
    -- | A random number generated by the issuer.
    unpredictableNumber :: Prelude.Text
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'CardHolderVerificationValue' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'applicationTransactionCounter', 'cardHolderVerificationValue_applicationTransactionCounter' - The transaction counter value that comes from a point of sale terminal.
--
-- 'panSequenceNumber', 'cardHolderVerificationValue_panSequenceNumber' - A number that identifies and differentiates payment cards with the same
-- Primary Account Number (PAN).
--
-- 'unpredictableNumber', 'cardHolderVerificationValue_unpredictableNumber' - A random number generated by the issuer.
newCardHolderVerificationValue ::
  -- | 'applicationTransactionCounter'
  Prelude.Text ->
  -- | 'panSequenceNumber'
  Prelude.Text ->
  -- | 'unpredictableNumber'
  Prelude.Text ->
  CardHolderVerificationValue
newCardHolderVerificationValue
  pApplicationTransactionCounter_
  pPanSequenceNumber_
  pUnpredictableNumber_ =
    CardHolderVerificationValue'
      { applicationTransactionCounter =
          pApplicationTransactionCounter_,
        panSequenceNumber = pPanSequenceNumber_,
        unpredictableNumber = pUnpredictableNumber_
      }

-- | The transaction counter value that comes from a point of sale terminal.
cardHolderVerificationValue_applicationTransactionCounter :: Lens.Lens' CardHolderVerificationValue Prelude.Text
cardHolderVerificationValue_applicationTransactionCounter = Lens.lens (\CardHolderVerificationValue' {applicationTransactionCounter} -> applicationTransactionCounter) (\s@CardHolderVerificationValue' {} a -> s {applicationTransactionCounter = a} :: CardHolderVerificationValue)

-- | A number that identifies and differentiates payment cards with the same
-- Primary Account Number (PAN).
cardHolderVerificationValue_panSequenceNumber :: Lens.Lens' CardHolderVerificationValue Prelude.Text
cardHolderVerificationValue_panSequenceNumber = Lens.lens (\CardHolderVerificationValue' {panSequenceNumber} -> panSequenceNumber) (\s@CardHolderVerificationValue' {} a -> s {panSequenceNumber = a} :: CardHolderVerificationValue)

-- | A random number generated by the issuer.
cardHolderVerificationValue_unpredictableNumber :: Lens.Lens' CardHolderVerificationValue Prelude.Text
cardHolderVerificationValue_unpredictableNumber = Lens.lens (\CardHolderVerificationValue' {unpredictableNumber} -> unpredictableNumber) (\s@CardHolderVerificationValue' {} a -> s {unpredictableNumber = a} :: CardHolderVerificationValue)

instance Prelude.Hashable CardHolderVerificationValue where
  hashWithSalt _salt CardHolderVerificationValue' {..} =
    _salt
      `Prelude.hashWithSalt` applicationTransactionCounter
      `Prelude.hashWithSalt` panSequenceNumber
      `Prelude.hashWithSalt` unpredictableNumber

instance Prelude.NFData CardHolderVerificationValue where
  rnf CardHolderVerificationValue' {..} =
    Prelude.rnf applicationTransactionCounter
      `Prelude.seq` Prelude.rnf panSequenceNumber
      `Prelude.seq` Prelude.rnf unpredictableNumber

instance Data.ToJSON CardHolderVerificationValue where
  toJSON CardHolderVerificationValue' {..} =
    Data.object
      ( Prelude.catMaybes
          [ Prelude.Just
              ( "ApplicationTransactionCounter"
                  Data..= applicationTransactionCounter
              ),
            Prelude.Just
              ("PanSequenceNumber" Data..= panSequenceNumber),
            Prelude.Just
              ("UnpredictableNumber" Data..= unpredictableNumber)
          ]
      )
