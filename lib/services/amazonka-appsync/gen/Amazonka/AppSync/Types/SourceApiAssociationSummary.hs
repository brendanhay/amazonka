{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Amazonka.AppSync.Types.SourceApiAssociationSummary
-- Copyright   : (c) 2013-2023 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Amazonka.AppSync.Types.SourceApiAssociationSummary where

import qualified Amazonka.Core as Core
import qualified Amazonka.Core.Lens.Internal as Lens
import qualified Amazonka.Data as Data
import qualified Amazonka.Prelude as Prelude

-- | Describes the ARNs and IDs of associations, Merged APIs, and source
-- APIs.
--
-- /See:/ 'newSourceApiAssociationSummary' smart constructor.
data SourceApiAssociationSummary = SourceApiAssociationSummary'
  { -- | The Amazon Resource Name (ARN) of the source API association.
    associationArn :: Prelude.Maybe Prelude.Text,
    -- | The ID generated by the AppSync service for the source API association.
    associationId :: Prelude.Maybe Prelude.Text,
    -- | The description field.
    description :: Prelude.Maybe Prelude.Text,
    -- | The Amazon Resource Name (ARN) of the AppSync Merged API.
    mergedApiArn :: Prelude.Maybe Prelude.Text,
    -- | The ID of the AppSync Merged API.
    mergedApiId :: Prelude.Maybe Prelude.Text,
    -- | The Amazon Resource Name (ARN) of the AppSync Source API.
    sourceApiArn :: Prelude.Maybe Prelude.Text,
    -- | The ID of the AppSync source API.
    sourceApiId :: Prelude.Maybe Prelude.Text
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'SourceApiAssociationSummary' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'associationArn', 'sourceApiAssociationSummary_associationArn' - The Amazon Resource Name (ARN) of the source API association.
--
-- 'associationId', 'sourceApiAssociationSummary_associationId' - The ID generated by the AppSync service for the source API association.
--
-- 'description', 'sourceApiAssociationSummary_description' - The description field.
--
-- 'mergedApiArn', 'sourceApiAssociationSummary_mergedApiArn' - The Amazon Resource Name (ARN) of the AppSync Merged API.
--
-- 'mergedApiId', 'sourceApiAssociationSummary_mergedApiId' - The ID of the AppSync Merged API.
--
-- 'sourceApiArn', 'sourceApiAssociationSummary_sourceApiArn' - The Amazon Resource Name (ARN) of the AppSync Source API.
--
-- 'sourceApiId', 'sourceApiAssociationSummary_sourceApiId' - The ID of the AppSync source API.
newSourceApiAssociationSummary ::
  SourceApiAssociationSummary
newSourceApiAssociationSummary =
  SourceApiAssociationSummary'
    { associationArn =
        Prelude.Nothing,
      associationId = Prelude.Nothing,
      description = Prelude.Nothing,
      mergedApiArn = Prelude.Nothing,
      mergedApiId = Prelude.Nothing,
      sourceApiArn = Prelude.Nothing,
      sourceApiId = Prelude.Nothing
    }

-- | The Amazon Resource Name (ARN) of the source API association.
sourceApiAssociationSummary_associationArn :: Lens.Lens' SourceApiAssociationSummary (Prelude.Maybe Prelude.Text)
sourceApiAssociationSummary_associationArn = Lens.lens (\SourceApiAssociationSummary' {associationArn} -> associationArn) (\s@SourceApiAssociationSummary' {} a -> s {associationArn = a} :: SourceApiAssociationSummary)

-- | The ID generated by the AppSync service for the source API association.
sourceApiAssociationSummary_associationId :: Lens.Lens' SourceApiAssociationSummary (Prelude.Maybe Prelude.Text)
sourceApiAssociationSummary_associationId = Lens.lens (\SourceApiAssociationSummary' {associationId} -> associationId) (\s@SourceApiAssociationSummary' {} a -> s {associationId = a} :: SourceApiAssociationSummary)

-- | The description field.
sourceApiAssociationSummary_description :: Lens.Lens' SourceApiAssociationSummary (Prelude.Maybe Prelude.Text)
sourceApiAssociationSummary_description = Lens.lens (\SourceApiAssociationSummary' {description} -> description) (\s@SourceApiAssociationSummary' {} a -> s {description = a} :: SourceApiAssociationSummary)

-- | The Amazon Resource Name (ARN) of the AppSync Merged API.
sourceApiAssociationSummary_mergedApiArn :: Lens.Lens' SourceApiAssociationSummary (Prelude.Maybe Prelude.Text)
sourceApiAssociationSummary_mergedApiArn = Lens.lens (\SourceApiAssociationSummary' {mergedApiArn} -> mergedApiArn) (\s@SourceApiAssociationSummary' {} a -> s {mergedApiArn = a} :: SourceApiAssociationSummary)

-- | The ID of the AppSync Merged API.
sourceApiAssociationSummary_mergedApiId :: Lens.Lens' SourceApiAssociationSummary (Prelude.Maybe Prelude.Text)
sourceApiAssociationSummary_mergedApiId = Lens.lens (\SourceApiAssociationSummary' {mergedApiId} -> mergedApiId) (\s@SourceApiAssociationSummary' {} a -> s {mergedApiId = a} :: SourceApiAssociationSummary)

-- | The Amazon Resource Name (ARN) of the AppSync Source API.
sourceApiAssociationSummary_sourceApiArn :: Lens.Lens' SourceApiAssociationSummary (Prelude.Maybe Prelude.Text)
sourceApiAssociationSummary_sourceApiArn = Lens.lens (\SourceApiAssociationSummary' {sourceApiArn} -> sourceApiArn) (\s@SourceApiAssociationSummary' {} a -> s {sourceApiArn = a} :: SourceApiAssociationSummary)

-- | The ID of the AppSync source API.
sourceApiAssociationSummary_sourceApiId :: Lens.Lens' SourceApiAssociationSummary (Prelude.Maybe Prelude.Text)
sourceApiAssociationSummary_sourceApiId = Lens.lens (\SourceApiAssociationSummary' {sourceApiId} -> sourceApiId) (\s@SourceApiAssociationSummary' {} a -> s {sourceApiId = a} :: SourceApiAssociationSummary)

instance Data.FromJSON SourceApiAssociationSummary where
  parseJSON =
    Data.withObject
      "SourceApiAssociationSummary"
      ( \x ->
          SourceApiAssociationSummary'
            Prelude.<$> (x Data..:? "associationArn")
            Prelude.<*> (x Data..:? "associationId")
            Prelude.<*> (x Data..:? "description")
            Prelude.<*> (x Data..:? "mergedApiArn")
            Prelude.<*> (x Data..:? "mergedApiId")
            Prelude.<*> (x Data..:? "sourceApiArn")
            Prelude.<*> (x Data..:? "sourceApiId")
      )

instance Prelude.Hashable SourceApiAssociationSummary where
  hashWithSalt _salt SourceApiAssociationSummary' {..} =
    _salt
      `Prelude.hashWithSalt` associationArn
      `Prelude.hashWithSalt` associationId
      `Prelude.hashWithSalt` description
      `Prelude.hashWithSalt` mergedApiArn
      `Prelude.hashWithSalt` mergedApiId
      `Prelude.hashWithSalt` sourceApiArn
      `Prelude.hashWithSalt` sourceApiId

instance Prelude.NFData SourceApiAssociationSummary where
  rnf SourceApiAssociationSummary' {..} =
    Prelude.rnf associationArn
      `Prelude.seq` Prelude.rnf associationId
      `Prelude.seq` Prelude.rnf description
      `Prelude.seq` Prelude.rnf mergedApiArn
      `Prelude.seq` Prelude.rnf mergedApiId
      `Prelude.seq` Prelude.rnf sourceApiArn
      `Prelude.seq` Prelude.rnf sourceApiId
