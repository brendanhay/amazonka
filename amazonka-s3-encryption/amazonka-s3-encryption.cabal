cabal-version:      2.2
name:               amazonka-s3-encryption
version:            1.6.1
synopsis:           Amazon Simple Storage Service SDK - Client-Side Encryption.
homepage:           https://github.com/brendanhay/amazonka
bug-reports:        https://github.com/brendanhay/amazonka/issues
license:            MPL-2.0
license-file:       LICENSE
author:             Brendan Hay
maintainer:         Brendan Hay <brendan.g.hay@gmail.com>
copyright:          Copyright (c) 2016 Brendan Hay
category:           AWS
build-type:         Simple
extra-source-files: README.md
description:
  Addons for <http://hackage.haskell.org/package/amazonka-s3 amazonka-s3> to
  support client-side encryption. This allows the use of a client-side master key
  to encrypt/decrypt data locally and store encrypted data in S3 to be later
  decrypt by any other client with access to the same master key. Unencrypted
  object data or keys are not sent to Amazon S3 using this method, but object
  metadata is transmitted in plaintext.
  .
  Encryption and decryption are done in a streaming fashion, with
  encrypted requests being incrementally signed using the version 4 signature
  algorithm and sent via chunked-encoding.
  .
  The client-side master key you provide can be a symmetric key, an
  asymmetric public/private key pair, or a KMS master key.
  .
  This library is designed to be compatible with the official Java
  AWS SDK (both V1 and V2 envelopes), but only a limited set of the possible
  encryption options are supported. Therefore assuming defaults, objects stored
  with this library should be retrievable by any of the other official SDKs, and
  vice versa. The metadata can be attached as header metadata
  on the stored object or as a separate JSON instructions file.
  @PutObject@, @GetObject@, and the various multipart upload operations are supported.
  .
  See <http://hackage.haskell.org/package/amazonka-s3-encryption/docs/Network-AWS-S3-Encryption.html Network.AWS.S3.Encryption>
  to get started.

source-repository head
  type:     git
  location: git://github.com/brendanhay/amazonka.git

common base
  default-language:   Haskell2010
  ghc-options:
    -Wall -funbox-strict-fields -fwarn-incomplete-uni-patterns
    -fwarn-incomplete-record-updates -fwarn-missing-deriving-strategies

  default-extensions:
    NoImplicitPrelude
    DataKinds
    DeriveAnyClass
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DerivingStrategies
    DerivingVia
    FlexibleContexts
    FlexibleInstances
    GeneralizedNewtypeDeriving
    LambdaCase
    NamedFieldPuns
    OverloadedStrings
    PatternSynonyms
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StrictData
    TupleSections
    TypeApplications
    TypeFamilies
    ViewPatterns

  build-depends:      base >=4.13 && <5

library
  import:          base
  hs-source-dirs:  src
  exposed-modules:
    Network.AWS.S3.Encryption
    Network.AWS.S3.Encryption.Body
    Network.AWS.S3.Encryption.Decrypt
    Network.AWS.S3.Encryption.Encrypt
    Network.AWS.S3.Encryption.Envelope
    Network.AWS.S3.Encryption.Instructions
    Network.AWS.S3.Encryption.Types

  build-depends:
    , aeson                 >=1.3     && <1.6
    , amazonka              >=1.6.1   && <1.6.2
    , amazonka-kms          >=1.6.1   && <1.6.2
    , amazonka-s3           >=1.6.1   && <1.6.2
    , bytestring            >=0.10.8
    , case-insensitive      >=1.2
    , conduit               >=1.3
    , cryptonite            >=0.25
    , http-client           >=0.5     && <0.8
    , lens                  >=4.14
    , memory                >=0.6
    , mtl                   >=2.1.3.1
    , resourcet             >=1.2
    , text                  >=1.1
    , unordered-containers  >=0.2.5
