name:                  amazonka-gamelift
version:               1.4.2
synopsis:              Amazon GameLift SDK.
homepage:              https://github.com/brendanhay/amazonka
bug-reports:           https://github.com/brendanhay/amazonka/issues
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2016 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
cabal-version:         >= 1.10
extra-source-files:    README.md fixture/*.yaml fixture/*.proto
description:
    Amazon GameLift Service

    Welcome to the /Amazon GameLift API Reference/. Amazon GameLift is a
    managed Amazon Web Services (AWS) service for developers who need a
    scalable, server-based solution for multiplayer games. Amazon GameLift
    provides setup and deployment of game servers, and handles
    infrastructure scaling and session management. For more information
    about the GameLift service, including a feature overview, getting
    started guide, and tutorial, see the accompanying
    <http://docs.aws.amazon.com/gamelift/latest/developerguide/ Amazon GameLift Developer Guide>.

    This reference describes the low-level service API for GameLift. You can
    call this API directly or use the
    <https://aws.amazon.com/tools/ AWS SDK> for your preferred language. The
    AWS SDK includes a set of high-level GameLift actions multiplayer game
    sessions. Alternatively, you can use the
    <https://aws.amazon.com/cli/ AWS command-line interface> (CLI) tool,
    which includes commands for GameLift. For administrative actions, you
    can use the Amazon GameLift console.

    __Managing Game and Player Sessions Through GameLift__

    Call these actions from your game clients and\/or services to create and
    manage multiplayer game sessions.

    -   __Game sessions__
        -   < CreateGameSession>
        -   < DescribeGameSessions>
        -   < DescribeGameSessionDetails>
        -   < UpdateGameSession>
    -   __Player sessions__
        -   < CreatePlayerSession>
        -   < CreatePlayerSessions>
        -   < DescribePlayerSessions>
    -   __Other actions:__
        -   < GetGameSessionLogUrl>

    __Setting Up Game Servers__

    Use these administrative actions to configure GameLift to host your game
    servers. When configuring GameLift, you\'ll need to (1) configure a
    build for your game and provide build files, and (2) set up one or more
    fleets to host game sessions.

    -   __Build actions:__
        -   < ListBuilds>
        -   < CreateBuild>
        -   < DescribeBuild>
        -   < UpdateBuild>
        -   < DeleteBuild>
        -   < RequestUploadCredentials>
    -   __Fleet actions:__
        -   < ListFleets>
        -   < CreateFleet>
        -   Describe fleet actions:
            -   < DescribeFleetAttributes>
            -   < DescribeFleetCapacity>
            -   < DescribeFleetPortSettings>
            -   < DescribeFleetUtilization>
            -   < DescribeEC2InstanceLimits>
            -   < DescribeFleetEvents>
        -   Update fleet actions:
            -   < UpdateFleetAttributes>
            -   < UpdateFleetCapacity>
            -   < UpdateFleetPortSettings>
        -   < DeleteFleet>
    -   __Alias actions:__
        -   < ListAliases>
        -   < CreateAlias>
        -   < DescribeAlias>
        -   < UpdateAlias>
        -   < DeleteAlias>
        -   < ResolveAlias>
    -   __Scaling policy actions:__
        -   < PutScalingPolicy>
        -   < DescribeScalingPolicies>
        -   < DeleteScalingPolicy>
    .
    The types from this library are intended to be used with
    <http://hackage.haskell.org/package/amazonka amazonka>, which provides
    mechanisms for specifying AuthN/AuthZ information and sending requests.
    .
    Use of lenses is required for constructing and manipulating types.
    This is due to the amount of nesting of AWS types and transparency regarding
    de/serialisation into more palatable Haskell values.
    The provided lenses should be compatible with any of the major lens libraries
    such as <http://hackage.haskell.org/package/lens lens> or
    <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
    .
    See "Network.AWS.GameLift" or <https://aws.amazon.com/documentation/ the AWS Documentation>
    to get started.

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.GameLift
        , Network.AWS.GameLift.CreateAlias
        , Network.AWS.GameLift.CreateBuild
        , Network.AWS.GameLift.CreateFleet
        , Network.AWS.GameLift.CreateGameSession
        , Network.AWS.GameLift.CreatePlayerSession
        , Network.AWS.GameLift.CreatePlayerSessions
        , Network.AWS.GameLift.DeleteAlias
        , Network.AWS.GameLift.DeleteBuild
        , Network.AWS.GameLift.DeleteFleet
        , Network.AWS.GameLift.DeleteScalingPolicy
        , Network.AWS.GameLift.DescribeAlias
        , Network.AWS.GameLift.DescribeBuild
        , Network.AWS.GameLift.DescribeEC2InstanceLimits
        , Network.AWS.GameLift.DescribeFleetAttributes
        , Network.AWS.GameLift.DescribeFleetCapacity
        , Network.AWS.GameLift.DescribeFleetEvents
        , Network.AWS.GameLift.DescribeFleetPortSettings
        , Network.AWS.GameLift.DescribeFleetUtilization
        , Network.AWS.GameLift.DescribeGameSessionDetails
        , Network.AWS.GameLift.DescribeGameSessions
        , Network.AWS.GameLift.DescribePlayerSessions
        , Network.AWS.GameLift.DescribeScalingPolicies
        , Network.AWS.GameLift.GetGameSessionLogURL
        , Network.AWS.GameLift.ListAliases
        , Network.AWS.GameLift.ListBuilds
        , Network.AWS.GameLift.ListFleets
        , Network.AWS.GameLift.PutScalingPolicy
        , Network.AWS.GameLift.RequestUploadCredentials
        , Network.AWS.GameLift.ResolveAlias
        , Network.AWS.GameLift.Types
        , Network.AWS.GameLift.UpdateAlias
        , Network.AWS.GameLift.UpdateBuild
        , Network.AWS.GameLift.UpdateFleetAttributes
        , Network.AWS.GameLift.UpdateFleetCapacity
        , Network.AWS.GameLift.UpdateFleetPortSettings
        , Network.AWS.GameLift.UpdateGameSession
        , Network.AWS.GameLift.Waiters

    other-modules:
          Network.AWS.GameLift.Types.Product
        , Network.AWS.GameLift.Types.Sum

    build-depends:
          amazonka-core == 1.4.2.*
        , base          >= 4.7     && < 5

test-suite amazonka-gamelift-test
    type:              exitcode-stdio-1.0
    default-language:  Haskell2010
    hs-source-dirs:    test
    main-is:           Main.hs

    ghc-options:       -Wall -threaded

    -- This section is encoded by the template and any modules added by
    -- hand outside these namespaces will not correctly be added to the
    -- distribution package.
    other-modules:
          Test.AWS.GameLift
        , Test.AWS.Gen.GameLift
        , Test.AWS.GameLift.Internal

    build-depends:
          amazonka-core == 1.4.2.*
        , amazonka-test == 1.4.2.*
        , amazonka-gamelift == 1.4.2.*
        , base
        , bytestring
        , tasty
        , tasty-hunit
        , text
        , time
        , unordered-containers
