name:                  amazonka-cognito-sync
version:               1.4.2
synopsis:              Amazon Cognito Sync SDK.
homepage:              https://github.com/brendanhay/amazonka
bug-reports:           https://github.com/brendanhay/amazonka/issues
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2016 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
cabal-version:         >= 1.10
extra-source-files:    README.md fixture/*.yaml fixture/*.proto
description:
    Amazon Cognito Sync

    Amazon Cognito Sync provides an AWS service and client library that
    enable cross-device syncing of application-related user data. High-level
    client libraries are available for both iOS and Android. You can use
    these libraries to persist data locally so that it\'s available even if
    the device is offline. Developer credentials don\'t need to be stored on
    the mobile device to access the service. You can use Amazon Cognito to
    obtain a normalized user ID and credentials. User data is persisted in a
    dataset that can store up to 1 MB of key-value pairs, and you can have
    up to 20 datasets per user identity.

    With Amazon Cognito Sync, the data stored for each identity is
    accessible only to credentials assigned to that identity. In order to
    use the Cognito Sync service, you need to make API calls using
    credentials retrieved with
    <http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/Welcome.html Amazon Cognito Identity service>.

    If you want to use Cognito Sync in an Android or iOS application, you
    will probably want to make API calls via the AWS Mobile SDK. To learn
    more, see the
    <http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html Developer Guide for Android>
    and the
    <http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html Developer Guide for iOS>.
    .
    The types from this library are intended to be used with
    <http://hackage.haskell.org/package/amazonka amazonka>, which provides
    mechanisms for specifying AuthN/AuthZ information and sending requests.
    .
    Use of lenses is required for constructing and manipulating types.
    This is due to the amount of nesting of AWS types and transparency regarding
    de/serialisation into more palatable Haskell values.
    The provided lenses should be compatible with any of the major lens libraries
    such as <http://hackage.haskell.org/package/lens lens> or
    <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
    .
    See "Network.AWS.CognitoSync" or <https://aws.amazon.com/documentation/ the AWS Documentation>
    to get started.

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.CognitoSync
        , Network.AWS.CognitoSync.BulkPublish
        , Network.AWS.CognitoSync.DeleteDataset
        , Network.AWS.CognitoSync.DescribeDataset
        , Network.AWS.CognitoSync.DescribeIdentityPoolUsage
        , Network.AWS.CognitoSync.DescribeIdentityUsage
        , Network.AWS.CognitoSync.GetBulkPublishDetails
        , Network.AWS.CognitoSync.GetCognitoEvents
        , Network.AWS.CognitoSync.GetIdentityPoolConfiguration
        , Network.AWS.CognitoSync.ListDatasets
        , Network.AWS.CognitoSync.ListIdentityPoolUsage
        , Network.AWS.CognitoSync.ListRecords
        , Network.AWS.CognitoSync.RegisterDevice
        , Network.AWS.CognitoSync.SetCognitoEvents
        , Network.AWS.CognitoSync.SetIdentityPoolConfiguration
        , Network.AWS.CognitoSync.SubscribeToDataset
        , Network.AWS.CognitoSync.Types
        , Network.AWS.CognitoSync.UnsubscribeFromDataset
        , Network.AWS.CognitoSync.UpdateRecords
        , Network.AWS.CognitoSync.Waiters

    other-modules:
          Network.AWS.CognitoSync.Types.Product
        , Network.AWS.CognitoSync.Types.Sum

    build-depends:
          amazonka-core == 1.4.2.*
        , base          >= 4.7     && < 5

test-suite amazonka-cognito-sync-test
    type:              exitcode-stdio-1.0
    default-language:  Haskell2010
    hs-source-dirs:    test
    main-is:           Main.hs

    ghc-options:       -Wall -threaded

    -- This section is encoded by the template and any modules added by
    -- hand outside these namespaces will not correctly be added to the
    -- distribution package.
    other-modules:
          Test.AWS.CognitoSync
        , Test.AWS.Gen.CognitoSync
        , Test.AWS.CognitoSync.Internal

    build-depends:
          amazonka-core == 1.4.2.*
        , amazonka-test == 1.4.2.*
        , amazonka-cognito-sync == 1.4.2.*
        , base
        , bytestring
        , tasty
        , tasty-hunit
        , text
        , time
        , unordered-containers
