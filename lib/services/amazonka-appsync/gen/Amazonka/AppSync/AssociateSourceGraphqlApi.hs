{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Amazonka.AppSync.AssociateSourceGraphqlApi
-- Copyright   : (c) 2013-2023 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Creates an association between a Merged API and source API using the
-- Merged API\'s identifier.
module Amazonka.AppSync.AssociateSourceGraphqlApi
  ( -- * Creating a Request
    AssociateSourceGraphqlApi (..),
    newAssociateSourceGraphqlApi,

    -- * Request Lenses
    associateSourceGraphqlApi_description,
    associateSourceGraphqlApi_sourceApiAssociationConfig,
    associateSourceGraphqlApi_mergedApiIdentifier,
    associateSourceGraphqlApi_sourceApiIdentifier,

    -- * Destructuring the Response
    AssociateSourceGraphqlApiResponse (..),
    newAssociateSourceGraphqlApiResponse,

    -- * Response Lenses
    associateSourceGraphqlApiResponse_sourceApiAssociation,
    associateSourceGraphqlApiResponse_httpStatus,
  )
where

import Amazonka.AppSync.Types
import qualified Amazonka.Core as Core
import qualified Amazonka.Core.Lens.Internal as Lens
import qualified Amazonka.Data as Data
import qualified Amazonka.Prelude as Prelude
import qualified Amazonka.Request as Request
import qualified Amazonka.Response as Response

-- | /See:/ 'newAssociateSourceGraphqlApi' smart constructor.
data AssociateSourceGraphqlApi = AssociateSourceGraphqlApi'
  { -- | The description field.
    description :: Prelude.Maybe Prelude.Text,
    -- | The @SourceApiAssociationConfig@ object data.
    sourceApiAssociationConfig :: Prelude.Maybe SourceApiAssociationConfig,
    -- | The identifier of the AppSync Merged API. This is generated by the
    -- AppSync service. In most cases, Merged APIs (especially in your account)
    -- only require the API ID value or ARN of the merged API. However, Merged
    -- APIs in other accounts (cross-account use cases) strictly require the
    -- full resource ARN of the merged API.
    mergedApiIdentifier :: Prelude.Text,
    -- | The identifier of the AppSync Source API. This is generated by the
    -- AppSync service. In most cases, source APIs (especially in your account)
    -- only require the API ID value or ARN of the source API. However, source
    -- APIs from other accounts (cross-account use cases) strictly require the
    -- full resource ARN of the source API.
    sourceApiIdentifier :: Prelude.Text
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'AssociateSourceGraphqlApi' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'description', 'associateSourceGraphqlApi_description' - The description field.
--
-- 'sourceApiAssociationConfig', 'associateSourceGraphqlApi_sourceApiAssociationConfig' - The @SourceApiAssociationConfig@ object data.
--
-- 'mergedApiIdentifier', 'associateSourceGraphqlApi_mergedApiIdentifier' - The identifier of the AppSync Merged API. This is generated by the
-- AppSync service. In most cases, Merged APIs (especially in your account)
-- only require the API ID value or ARN of the merged API. However, Merged
-- APIs in other accounts (cross-account use cases) strictly require the
-- full resource ARN of the merged API.
--
-- 'sourceApiIdentifier', 'associateSourceGraphqlApi_sourceApiIdentifier' - The identifier of the AppSync Source API. This is generated by the
-- AppSync service. In most cases, source APIs (especially in your account)
-- only require the API ID value or ARN of the source API. However, source
-- APIs from other accounts (cross-account use cases) strictly require the
-- full resource ARN of the source API.
newAssociateSourceGraphqlApi ::
  -- | 'mergedApiIdentifier'
  Prelude.Text ->
  -- | 'sourceApiIdentifier'
  Prelude.Text ->
  AssociateSourceGraphqlApi
newAssociateSourceGraphqlApi
  pMergedApiIdentifier_
  pSourceApiIdentifier_ =
    AssociateSourceGraphqlApi'
      { description =
          Prelude.Nothing,
        sourceApiAssociationConfig = Prelude.Nothing,
        mergedApiIdentifier = pMergedApiIdentifier_,
        sourceApiIdentifier = pSourceApiIdentifier_
      }

-- | The description field.
associateSourceGraphqlApi_description :: Lens.Lens' AssociateSourceGraphqlApi (Prelude.Maybe Prelude.Text)
associateSourceGraphqlApi_description = Lens.lens (\AssociateSourceGraphqlApi' {description} -> description) (\s@AssociateSourceGraphqlApi' {} a -> s {description = a} :: AssociateSourceGraphqlApi)

-- | The @SourceApiAssociationConfig@ object data.
associateSourceGraphqlApi_sourceApiAssociationConfig :: Lens.Lens' AssociateSourceGraphqlApi (Prelude.Maybe SourceApiAssociationConfig)
associateSourceGraphqlApi_sourceApiAssociationConfig = Lens.lens (\AssociateSourceGraphqlApi' {sourceApiAssociationConfig} -> sourceApiAssociationConfig) (\s@AssociateSourceGraphqlApi' {} a -> s {sourceApiAssociationConfig = a} :: AssociateSourceGraphqlApi)

-- | The identifier of the AppSync Merged API. This is generated by the
-- AppSync service. In most cases, Merged APIs (especially in your account)
-- only require the API ID value or ARN of the merged API. However, Merged
-- APIs in other accounts (cross-account use cases) strictly require the
-- full resource ARN of the merged API.
associateSourceGraphqlApi_mergedApiIdentifier :: Lens.Lens' AssociateSourceGraphqlApi Prelude.Text
associateSourceGraphqlApi_mergedApiIdentifier = Lens.lens (\AssociateSourceGraphqlApi' {mergedApiIdentifier} -> mergedApiIdentifier) (\s@AssociateSourceGraphqlApi' {} a -> s {mergedApiIdentifier = a} :: AssociateSourceGraphqlApi)

-- | The identifier of the AppSync Source API. This is generated by the
-- AppSync service. In most cases, source APIs (especially in your account)
-- only require the API ID value or ARN of the source API. However, source
-- APIs from other accounts (cross-account use cases) strictly require the
-- full resource ARN of the source API.
associateSourceGraphqlApi_sourceApiIdentifier :: Lens.Lens' AssociateSourceGraphqlApi Prelude.Text
associateSourceGraphqlApi_sourceApiIdentifier = Lens.lens (\AssociateSourceGraphqlApi' {sourceApiIdentifier} -> sourceApiIdentifier) (\s@AssociateSourceGraphqlApi' {} a -> s {sourceApiIdentifier = a} :: AssociateSourceGraphqlApi)

instance Core.AWSRequest AssociateSourceGraphqlApi where
  type
    AWSResponse AssociateSourceGraphqlApi =
      AssociateSourceGraphqlApiResponse
  request overrides =
    Request.postJSON (overrides defaultService)
  response =
    Response.receiveJSON
      ( \s h x ->
          AssociateSourceGraphqlApiResponse'
            Prelude.<$> (x Data..?> "sourceApiAssociation")
            Prelude.<*> (Prelude.pure (Prelude.fromEnum s))
      )

instance Prelude.Hashable AssociateSourceGraphqlApi where
  hashWithSalt _salt AssociateSourceGraphqlApi' {..} =
    _salt
      `Prelude.hashWithSalt` description
      `Prelude.hashWithSalt` sourceApiAssociationConfig
      `Prelude.hashWithSalt` mergedApiIdentifier
      `Prelude.hashWithSalt` sourceApiIdentifier

instance Prelude.NFData AssociateSourceGraphqlApi where
  rnf AssociateSourceGraphqlApi' {..} =
    Prelude.rnf description
      `Prelude.seq` Prelude.rnf sourceApiAssociationConfig
      `Prelude.seq` Prelude.rnf mergedApiIdentifier
      `Prelude.seq` Prelude.rnf sourceApiIdentifier

instance Data.ToHeaders AssociateSourceGraphqlApi where
  toHeaders =
    Prelude.const
      ( Prelude.mconcat
          [ "Content-Type"
              Data.=# ( "application/x-amz-json-1.1" ::
                          Prelude.ByteString
                      )
          ]
      )

instance Data.ToJSON AssociateSourceGraphqlApi where
  toJSON AssociateSourceGraphqlApi' {..} =
    Data.object
      ( Prelude.catMaybes
          [ ("description" Data..=) Prelude.<$> description,
            ("sourceApiAssociationConfig" Data..=)
              Prelude.<$> sourceApiAssociationConfig,
            Prelude.Just
              ("sourceApiIdentifier" Data..= sourceApiIdentifier)
          ]
      )

instance Data.ToPath AssociateSourceGraphqlApi where
  toPath AssociateSourceGraphqlApi' {..} =
    Prelude.mconcat
      [ "/v1/mergedApis/",
        Data.toBS mergedApiIdentifier,
        "/sourceApiAssociations"
      ]

instance Data.ToQuery AssociateSourceGraphqlApi where
  toQuery = Prelude.const Prelude.mempty

-- | /See:/ 'newAssociateSourceGraphqlApiResponse' smart constructor.
data AssociateSourceGraphqlApiResponse = AssociateSourceGraphqlApiResponse'
  { -- | The @SourceApiAssociation@ object data.
    sourceApiAssociation :: Prelude.Maybe SourceApiAssociation,
    -- | The response's http status code.
    httpStatus :: Prelude.Int
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'AssociateSourceGraphqlApiResponse' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'sourceApiAssociation', 'associateSourceGraphqlApiResponse_sourceApiAssociation' - The @SourceApiAssociation@ object data.
--
-- 'httpStatus', 'associateSourceGraphqlApiResponse_httpStatus' - The response's http status code.
newAssociateSourceGraphqlApiResponse ::
  -- | 'httpStatus'
  Prelude.Int ->
  AssociateSourceGraphqlApiResponse
newAssociateSourceGraphqlApiResponse pHttpStatus_ =
  AssociateSourceGraphqlApiResponse'
    { sourceApiAssociation =
        Prelude.Nothing,
      httpStatus = pHttpStatus_
    }

-- | The @SourceApiAssociation@ object data.
associateSourceGraphqlApiResponse_sourceApiAssociation :: Lens.Lens' AssociateSourceGraphqlApiResponse (Prelude.Maybe SourceApiAssociation)
associateSourceGraphqlApiResponse_sourceApiAssociation = Lens.lens (\AssociateSourceGraphqlApiResponse' {sourceApiAssociation} -> sourceApiAssociation) (\s@AssociateSourceGraphqlApiResponse' {} a -> s {sourceApiAssociation = a} :: AssociateSourceGraphqlApiResponse)

-- | The response's http status code.
associateSourceGraphqlApiResponse_httpStatus :: Lens.Lens' AssociateSourceGraphqlApiResponse Prelude.Int
associateSourceGraphqlApiResponse_httpStatus = Lens.lens (\AssociateSourceGraphqlApiResponse' {httpStatus} -> httpStatus) (\s@AssociateSourceGraphqlApiResponse' {} a -> s {httpStatus = a} :: AssociateSourceGraphqlApiResponse)

instance
  Prelude.NFData
    AssociateSourceGraphqlApiResponse
  where
  rnf AssociateSourceGraphqlApiResponse' {..} =
    Prelude.rnf sourceApiAssociation
      `Prelude.seq` Prelude.rnf httpStatus
