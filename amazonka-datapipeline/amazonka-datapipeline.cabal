cabal-version:      2.2
name:               amazonka-datapipeline
version:            1.6.1
synopsis:           Amazon Data Pipeline SDK.
homepage:           https://github.com/brendanhay/amazonka
bug-reports:        https://github.com/brendanhay/amazonka/issues
license:            MPL-2.0
license-file:       LICENSE
author:             Brendan Hay
maintainer:         Brendan Hay <brendan.g.hay+amazonka@gmail.com>
copyright:          Copyright (c) 2013-2021 Brendan Hay
category:           AWS
build-type:         Simple
extra-source-files:
  fixture/*.proto
  fixture/*.yaml
  README.md
  src/.gitkeep

description:
  Derived from API version @2012-10-29@ of the AWS service descriptions, licensed under Apache 2.0.
  .
  The types from this library are intended to be used with <http://hackage.haskell.org/package/amazonka amazonka>,
  which provides mechanisms for specifying AuthN/AuthZ information, sending requests, and receiving responses.
  .
  It is recommended to use generic lenses or optics from packages such as <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify optional fields and deconstruct responses.
  .
  Generated lenses for legacy behaviour can be found in "Network.AWS.DataPipeline.Lens"
  and are suitable for use with a lens package such as <http://hackage.haskell.org/package/lens lens> or <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
  .
  Additional types and functions from <https://hackage.haskell.org/package/amazonka-core amazonka-core> are re-exported by the "Network.AWS.Prelude" module in this package.
  .
  See "Network.AWS.DataPipeline" and the <https://aws.amazon.com/documentation/ AWS documentation> to get started.

source-repository head
  type:     git
  location: git://github.com/brendanhay/amazonka.git
  subdir:   amazonka-datapipeline

library
  default-language:   Haskell2010
  hs-source-dirs:     src gen
  ghc-options:
    -Wall -fwarn-incomplete-uni-patterns
    -fwarn-incomplete-record-updates -funbox-strict-fields

  exposed-modules:
    Network.AWS.DataPipeline
    Network.AWS.DataPipeline.ActivatePipeline
    Network.AWS.DataPipeline.AddTags
    Network.AWS.DataPipeline.CreatePipeline
    Network.AWS.DataPipeline.DeactivatePipeline
    Network.AWS.DataPipeline.DeletePipeline
    Network.AWS.DataPipeline.DescribeObjects
    Network.AWS.DataPipeline.DescribePipelines
    Network.AWS.DataPipeline.EvaluateExpression
    Network.AWS.DataPipeline.GetPipelineDefinition
    Network.AWS.DataPipeline.Lens
    Network.AWS.DataPipeline.ListPipelines
    Network.AWS.DataPipeline.PollForTask
    Network.AWS.DataPipeline.PutPipelineDefinition
    Network.AWS.DataPipeline.QueryObjects
    Network.AWS.DataPipeline.RemoveTags
    Network.AWS.DataPipeline.ReportTaskProgress
    Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat
    Network.AWS.DataPipeline.SetStatus
    Network.AWS.DataPipeline.SetTaskStatus
    Network.AWS.DataPipeline.Types
    Network.AWS.DataPipeline.Types.Field
    Network.AWS.DataPipeline.Types.InstanceIdentity
    Network.AWS.DataPipeline.Types.Operator
    Network.AWS.DataPipeline.Types.OperatorType
    Network.AWS.DataPipeline.Types.ParameterAttribute
    Network.AWS.DataPipeline.Types.ParameterObject
    Network.AWS.DataPipeline.Types.ParameterValue
    Network.AWS.DataPipeline.Types.PipelineDescription
    Network.AWS.DataPipeline.Types.PipelineIdName
    Network.AWS.DataPipeline.Types.PipelineObject
    Network.AWS.DataPipeline.Types.Query
    Network.AWS.DataPipeline.Types.Selector
    Network.AWS.DataPipeline.Types.Tag
    Network.AWS.DataPipeline.Types.TaskObject
    Network.AWS.DataPipeline.Types.TaskStatus
    Network.AWS.DataPipeline.Types.ValidationError
    Network.AWS.DataPipeline.Types.ValidationWarning
    Network.AWS.DataPipeline.ValidatePipelineDefinition
    Network.AWS.DataPipeline.Waiters

  reexported-modules: Network.AWS
  build-depends:
    , amazonka  >=1.6.1 && <1.6.2
    , base      >=4.13  && <5

test-suite amazonka-datapipeline-test
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          Main.hs
  ghc-options:      -Wall -threaded

  -- This section is encoded by the template and any modules added by
  -- hand outside these namespaces will not correctly be added to the
  -- distribution package.
  other-modules:
    Test.AWS.DataPipeline
    Test.AWS.DataPipeline.Internal
    Test.AWS.Gen.DataPipeline

  build-depends:
    , amazonka               >=1.6.1 && <1.6.2
    , amazonka-datapipeline
    , amazonka-test          >=1.6.1 && <1.6.2
    , base
    , bytestring
    , case-insensitive
    , tasty
    , tasty-hunit
    , text
    , time
    , unordered-containers
