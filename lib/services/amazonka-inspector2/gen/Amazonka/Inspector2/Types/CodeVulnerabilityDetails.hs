{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Amazonka.Inspector2.Types.CodeVulnerabilityDetails
-- Copyright   : (c) 2013-2023 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Amazonka.Inspector2.Types.CodeVulnerabilityDetails where

import qualified Amazonka.Core as Core
import qualified Amazonka.Core.Lens.Internal as Lens
import qualified Amazonka.Data as Data
import Amazonka.Inspector2.Types.CodeFilePath
import qualified Amazonka.Prelude as Prelude

-- | Contains information on the code vulnerability identified in your Lambda
-- function.
--
-- /See:/ 'newCodeVulnerabilityDetails' smart constructor.
data CodeVulnerabilityDetails = CodeVulnerabilityDetails'
  { -- | The detector tag associated with the vulnerability. Detector tags group
    -- related vulnerabilities by common themes or tactics. For a list of
    -- available tags by programming language, see
    -- <https://docs.aws.amazon.com/codeguru/detector-library/java/tags/ Java tags>,
    -- or
    -- <https://docs.aws.amazon.com/codeguru/detector-library/python/tags/ Python tags>.
    detectorTags :: Prelude.Maybe (Prelude.NonEmpty Prelude.Text),
    -- | A URL containing supporting documentation about the code vulnerability
    -- detected.
    referenceUrls :: Prelude.Maybe (Prelude.NonEmpty Prelude.Text),
    -- | The identifier for a rule that was used to detect the code
    -- vulnerability.
    ruleId :: Prelude.Maybe Prelude.Text,
    -- | The Amazon Resource Name (ARN) of the Lambda layer that the code
    -- vulnerability was detected in.
    sourceLambdaLayerArn :: Prelude.Maybe Prelude.Text,
    -- | The Common Weakness Enumeration (CWE) item associated with the detected
    -- vulnerability.
    cwes :: Prelude.NonEmpty Prelude.Text,
    -- | The ID for the Amazon CodeGuru detector associated with the finding. For
    -- more information on detectors see
    -- <https://docs.aws.amazon.com/codeguru/detector-library Amazon CodeGuru Detector Library>.
    detectorId :: Prelude.Text,
    -- | The name of the detector used to identify the code vulnerability. For
    -- more information on detectors see
    -- <https://docs.aws.amazon.com/codeguru/detector-library CodeGuru Detector Library>.
    detectorName :: Prelude.Text,
    -- | Contains information on where the code vulnerability is located in your
    -- code.
    filePath :: CodeFilePath
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'CodeVulnerabilityDetails' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'detectorTags', 'codeVulnerabilityDetails_detectorTags' - The detector tag associated with the vulnerability. Detector tags group
-- related vulnerabilities by common themes or tactics. For a list of
-- available tags by programming language, see
-- <https://docs.aws.amazon.com/codeguru/detector-library/java/tags/ Java tags>,
-- or
-- <https://docs.aws.amazon.com/codeguru/detector-library/python/tags/ Python tags>.
--
-- 'referenceUrls', 'codeVulnerabilityDetails_referenceUrls' - A URL containing supporting documentation about the code vulnerability
-- detected.
--
-- 'ruleId', 'codeVulnerabilityDetails_ruleId' - The identifier for a rule that was used to detect the code
-- vulnerability.
--
-- 'sourceLambdaLayerArn', 'codeVulnerabilityDetails_sourceLambdaLayerArn' - The Amazon Resource Name (ARN) of the Lambda layer that the code
-- vulnerability was detected in.
--
-- 'cwes', 'codeVulnerabilityDetails_cwes' - The Common Weakness Enumeration (CWE) item associated with the detected
-- vulnerability.
--
-- 'detectorId', 'codeVulnerabilityDetails_detectorId' - The ID for the Amazon CodeGuru detector associated with the finding. For
-- more information on detectors see
-- <https://docs.aws.amazon.com/codeguru/detector-library Amazon CodeGuru Detector Library>.
--
-- 'detectorName', 'codeVulnerabilityDetails_detectorName' - The name of the detector used to identify the code vulnerability. For
-- more information on detectors see
-- <https://docs.aws.amazon.com/codeguru/detector-library CodeGuru Detector Library>.
--
-- 'filePath', 'codeVulnerabilityDetails_filePath' - Contains information on where the code vulnerability is located in your
-- code.
newCodeVulnerabilityDetails ::
  -- | 'cwes'
  Prelude.NonEmpty Prelude.Text ->
  -- | 'detectorId'
  Prelude.Text ->
  -- | 'detectorName'
  Prelude.Text ->
  -- | 'filePath'
  CodeFilePath ->
  CodeVulnerabilityDetails
newCodeVulnerabilityDetails
  pCwes_
  pDetectorId_
  pDetectorName_
  pFilePath_ =
    CodeVulnerabilityDetails'
      { detectorTags =
          Prelude.Nothing,
        referenceUrls = Prelude.Nothing,
        ruleId = Prelude.Nothing,
        sourceLambdaLayerArn = Prelude.Nothing,
        cwes = Lens.coerced Lens.# pCwes_,
        detectorId = pDetectorId_,
        detectorName = pDetectorName_,
        filePath = pFilePath_
      }

-- | The detector tag associated with the vulnerability. Detector tags group
-- related vulnerabilities by common themes or tactics. For a list of
-- available tags by programming language, see
-- <https://docs.aws.amazon.com/codeguru/detector-library/java/tags/ Java tags>,
-- or
-- <https://docs.aws.amazon.com/codeguru/detector-library/python/tags/ Python tags>.
codeVulnerabilityDetails_detectorTags :: Lens.Lens' CodeVulnerabilityDetails (Prelude.Maybe (Prelude.NonEmpty Prelude.Text))
codeVulnerabilityDetails_detectorTags = Lens.lens (\CodeVulnerabilityDetails' {detectorTags} -> detectorTags) (\s@CodeVulnerabilityDetails' {} a -> s {detectorTags = a} :: CodeVulnerabilityDetails) Prelude.. Lens.mapping Lens.coerced

-- | A URL containing supporting documentation about the code vulnerability
-- detected.
codeVulnerabilityDetails_referenceUrls :: Lens.Lens' CodeVulnerabilityDetails (Prelude.Maybe (Prelude.NonEmpty Prelude.Text))
codeVulnerabilityDetails_referenceUrls = Lens.lens (\CodeVulnerabilityDetails' {referenceUrls} -> referenceUrls) (\s@CodeVulnerabilityDetails' {} a -> s {referenceUrls = a} :: CodeVulnerabilityDetails) Prelude.. Lens.mapping Lens.coerced

-- | The identifier for a rule that was used to detect the code
-- vulnerability.
codeVulnerabilityDetails_ruleId :: Lens.Lens' CodeVulnerabilityDetails (Prelude.Maybe Prelude.Text)
codeVulnerabilityDetails_ruleId = Lens.lens (\CodeVulnerabilityDetails' {ruleId} -> ruleId) (\s@CodeVulnerabilityDetails' {} a -> s {ruleId = a} :: CodeVulnerabilityDetails)

-- | The Amazon Resource Name (ARN) of the Lambda layer that the code
-- vulnerability was detected in.
codeVulnerabilityDetails_sourceLambdaLayerArn :: Lens.Lens' CodeVulnerabilityDetails (Prelude.Maybe Prelude.Text)
codeVulnerabilityDetails_sourceLambdaLayerArn = Lens.lens (\CodeVulnerabilityDetails' {sourceLambdaLayerArn} -> sourceLambdaLayerArn) (\s@CodeVulnerabilityDetails' {} a -> s {sourceLambdaLayerArn = a} :: CodeVulnerabilityDetails)

-- | The Common Weakness Enumeration (CWE) item associated with the detected
-- vulnerability.
codeVulnerabilityDetails_cwes :: Lens.Lens' CodeVulnerabilityDetails (Prelude.NonEmpty Prelude.Text)
codeVulnerabilityDetails_cwes = Lens.lens (\CodeVulnerabilityDetails' {cwes} -> cwes) (\s@CodeVulnerabilityDetails' {} a -> s {cwes = a} :: CodeVulnerabilityDetails) Prelude.. Lens.coerced

-- | The ID for the Amazon CodeGuru detector associated with the finding. For
-- more information on detectors see
-- <https://docs.aws.amazon.com/codeguru/detector-library Amazon CodeGuru Detector Library>.
codeVulnerabilityDetails_detectorId :: Lens.Lens' CodeVulnerabilityDetails Prelude.Text
codeVulnerabilityDetails_detectorId = Lens.lens (\CodeVulnerabilityDetails' {detectorId} -> detectorId) (\s@CodeVulnerabilityDetails' {} a -> s {detectorId = a} :: CodeVulnerabilityDetails)

-- | The name of the detector used to identify the code vulnerability. For
-- more information on detectors see
-- <https://docs.aws.amazon.com/codeguru/detector-library CodeGuru Detector Library>.
codeVulnerabilityDetails_detectorName :: Lens.Lens' CodeVulnerabilityDetails Prelude.Text
codeVulnerabilityDetails_detectorName = Lens.lens (\CodeVulnerabilityDetails' {detectorName} -> detectorName) (\s@CodeVulnerabilityDetails' {} a -> s {detectorName = a} :: CodeVulnerabilityDetails)

-- | Contains information on where the code vulnerability is located in your
-- code.
codeVulnerabilityDetails_filePath :: Lens.Lens' CodeVulnerabilityDetails CodeFilePath
codeVulnerabilityDetails_filePath = Lens.lens (\CodeVulnerabilityDetails' {filePath} -> filePath) (\s@CodeVulnerabilityDetails' {} a -> s {filePath = a} :: CodeVulnerabilityDetails)

instance Data.FromJSON CodeVulnerabilityDetails where
  parseJSON =
    Data.withObject
      "CodeVulnerabilityDetails"
      ( \x ->
          CodeVulnerabilityDetails'
            Prelude.<$> (x Data..:? "detectorTags")
            Prelude.<*> (x Data..:? "referenceUrls")
            Prelude.<*> (x Data..:? "ruleId")
            Prelude.<*> (x Data..:? "sourceLambdaLayerArn")
            Prelude.<*> (x Data..: "cwes")
            Prelude.<*> (x Data..: "detectorId")
            Prelude.<*> (x Data..: "detectorName")
            Prelude.<*> (x Data..: "filePath")
      )

instance Prelude.Hashable CodeVulnerabilityDetails where
  hashWithSalt _salt CodeVulnerabilityDetails' {..} =
    _salt
      `Prelude.hashWithSalt` detectorTags
      `Prelude.hashWithSalt` referenceUrls
      `Prelude.hashWithSalt` ruleId
      `Prelude.hashWithSalt` sourceLambdaLayerArn
      `Prelude.hashWithSalt` cwes
      `Prelude.hashWithSalt` detectorId
      `Prelude.hashWithSalt` detectorName
      `Prelude.hashWithSalt` filePath

instance Prelude.NFData CodeVulnerabilityDetails where
  rnf CodeVulnerabilityDetails' {..} =
    Prelude.rnf detectorTags
      `Prelude.seq` Prelude.rnf referenceUrls
      `Prelude.seq` Prelude.rnf ruleId
      `Prelude.seq` Prelude.rnf sourceLambdaLayerArn
      `Prelude.seq` Prelude.rnf cwes
      `Prelude.seq` Prelude.rnf detectorId
      `Prelude.seq` Prelude.rnf detectorName
      `Prelude.seq` Prelude.rnf filePath
