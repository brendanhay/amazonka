name: build

on:
  pull_request:
    branches: main
    types:
      - opened
      - synchronize
  push:
    branches: main
    paths-ignore:
      - 'configs/**'
      - 'scripts/**'
      - 'cabal.project'
      - 'README.md'
      - 'LICENSE'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest, ghc: 884  }
          - { os: ubuntu-latest, ghc: 8107 }
          - { os: ubuntu-latest, ghc: 902 }
          - { os: macos-latest,  ghc: 902 }

    runs-on: ${{ matrix.os }}

    steps:
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |-
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt &

      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v14.1
        with:
          nix_path: nixpkgs=./nix/nixpkgs.nix
          extra_nix_config: |
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
            extra-substituters = https://cache.iog.io

      - uses: cachix/cachix-action@v10
        with:
          name: amazonka
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Restore repository cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/bazel/amazonka/repo
          key: repo-cache-${{ matrix.os }}-${{ matrix.ghc }}-build

      - name: Configure
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
        run: |
          cat >.bazelrc.local <<EOF
          common --config=ci
          common --config=remote
          build --remote_header=x-buildbuddy-api-key="$BUILDBUDDY_API_KEY"
          EOF

      - name: Build and test
        run: |
          nix-shell --argstr ghcVersion '${{ matrix.ghc }}' --run '
            set -euo pipefail
            bazel build //lib/... //gen/...
            bazel test  //lib/...
            '
