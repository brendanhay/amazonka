name:                  amazonka-datapipeline
version:               1.4.2
synopsis:              Amazon Data Pipeline SDK.
homepage:              https://github.com/brendanhay/amazonka
bug-reports:           https://github.com/brendanhay/amazonka/issues
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2016 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
cabal-version:         >= 1.10
extra-source-files:    README.md fixture/*.yaml fixture/*.proto
description:
    AWS Data Pipeline configures and manages a data-driven workflow called a
    pipeline. AWS Data Pipeline handles the details of scheduling and
    ensuring that data dependencies are met so that your application can
    focus on processing the data.

    AWS Data Pipeline provides a JAR implementation of a task runner called
    AWS Data Pipeline Task Runner. AWS Data Pipeline Task Runner provides
    logic for common data management scenarios, such as performing database
    queries and running data analysis using Amazon Elastic MapReduce (Amazon
    EMR). You can use AWS Data Pipeline Task Runner as your task runner, or
    you can write your own task runner to provide custom data management.

    AWS Data Pipeline implements two main sets of functionality. Use the
    first set to create a pipeline and define data sources, schedules,
    dependencies, and the transforms to be performed on the data. Use the
    second set in your task runner application to receive the next task
    ready for processing. The logic for performing the task, such as
    querying the data, running data analysis, or converting the data from
    one format to another, is contained within the task runner. The task
    runner performs the task assigned to it by the web service, reporting
    progress to the web service as it does so. When the task is done, the
    task runner reports the final success or failure of the task to the web
    service.
    .
    The types from this library are intended to be used with
    <http://hackage.haskell.org/package/amazonka amazonka>, which provides
    mechanisms for specifying AuthN/AuthZ information and sending requests.
    .
    Use of lenses is required for constructing and manipulating types.
    This is due to the amount of nesting of AWS types and transparency regarding
    de/serialisation into more palatable Haskell values.
    The provided lenses should be compatible with any of the major lens libraries
    such as <http://hackage.haskell.org/package/lens lens> or
    <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
    .
    See "Network.AWS.DataPipeline" or <https://aws.amazon.com/documentation/ the AWS Documentation>
    to get started.

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.DataPipeline
        , Network.AWS.DataPipeline.ActivatePipeline
        , Network.AWS.DataPipeline.AddTags
        , Network.AWS.DataPipeline.CreatePipeline
        , Network.AWS.DataPipeline.DeactivatePipeline
        , Network.AWS.DataPipeline.DeletePipeline
        , Network.AWS.DataPipeline.DescribeObjects
        , Network.AWS.DataPipeline.DescribePipelines
        , Network.AWS.DataPipeline.EvaluateExpression
        , Network.AWS.DataPipeline.GetPipelineDefinition
        , Network.AWS.DataPipeline.ListPipelines
        , Network.AWS.DataPipeline.PollForTask
        , Network.AWS.DataPipeline.PutPipelineDefinition
        , Network.AWS.DataPipeline.QueryObjects
        , Network.AWS.DataPipeline.RemoveTags
        , Network.AWS.DataPipeline.ReportTaskProgress
        , Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat
        , Network.AWS.DataPipeline.SetStatus
        , Network.AWS.DataPipeline.SetTaskStatus
        , Network.AWS.DataPipeline.Types
        , Network.AWS.DataPipeline.ValidatePipelineDefinition
        , Network.AWS.DataPipeline.Waiters

    other-modules:
          Network.AWS.DataPipeline.Types.Product
        , Network.AWS.DataPipeline.Types.Sum

    build-depends:
          amazonka-core == 1.4.2.*
        , base          >= 4.7     && < 5

test-suite amazonka-datapipeline-test
    type:              exitcode-stdio-1.0
    default-language:  Haskell2010
    hs-source-dirs:    test
    main-is:           Main.hs

    ghc-options:       -Wall -threaded

    -- This section is encoded by the template and any modules added by
    -- hand outside these namespaces will not correctly be added to the
    -- distribution package.
    other-modules:
          Test.AWS.DataPipeline
        , Test.AWS.Gen.DataPipeline
        , Test.AWS.DataPipeline.Internal

    build-depends:
          amazonka-core == 1.4.2.*
        , amazonka-test == 1.4.2.*
        , amazonka-datapipeline == 1.4.2.*
        , base
        , bytestring
        , tasty
        , tasty-hunit
        , text
        , time
        , unordered-containers
