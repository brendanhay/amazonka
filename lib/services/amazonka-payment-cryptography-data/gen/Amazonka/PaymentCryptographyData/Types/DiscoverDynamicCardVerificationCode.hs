{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Amazonka.PaymentCryptographyData.Types.DiscoverDynamicCardVerificationCode
-- Copyright   : (c) 2013-2023 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Amazonka.PaymentCryptographyData.Types.DiscoverDynamicCardVerificationCode where

import qualified Amazonka.Core as Core
import qualified Amazonka.Core.Lens.Internal as Lens
import qualified Amazonka.Data as Data
import qualified Amazonka.Prelude as Prelude

-- | Parameters that are required to generate or verify dCVC (Dynamic Card
-- Verification Code).
--
-- /See:/ 'newDiscoverDynamicCardVerificationCode' smart constructor.
data DiscoverDynamicCardVerificationCode = DiscoverDynamicCardVerificationCode'
  { -- | The transaction counter value that comes from the terminal.
    applicationTransactionCounter :: Prelude.Text,
    -- | The expiry date of a payment card.
    cardExpiryDate :: Prelude.Text,
    -- | A random number that is generated by the issuer.
    unpredictableNumber :: Prelude.Text
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'DiscoverDynamicCardVerificationCode' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'applicationTransactionCounter', 'discoverDynamicCardVerificationCode_applicationTransactionCounter' - The transaction counter value that comes from the terminal.
--
-- 'cardExpiryDate', 'discoverDynamicCardVerificationCode_cardExpiryDate' - The expiry date of a payment card.
--
-- 'unpredictableNumber', 'discoverDynamicCardVerificationCode_unpredictableNumber' - A random number that is generated by the issuer.
newDiscoverDynamicCardVerificationCode ::
  -- | 'applicationTransactionCounter'
  Prelude.Text ->
  -- | 'cardExpiryDate'
  Prelude.Text ->
  -- | 'unpredictableNumber'
  Prelude.Text ->
  DiscoverDynamicCardVerificationCode
newDiscoverDynamicCardVerificationCode
  pApplicationTransactionCounter_
  pCardExpiryDate_
  pUnpredictableNumber_ =
    DiscoverDynamicCardVerificationCode'
      { applicationTransactionCounter =
          pApplicationTransactionCounter_,
        cardExpiryDate = pCardExpiryDate_,
        unpredictableNumber =
          pUnpredictableNumber_
      }

-- | The transaction counter value that comes from the terminal.
discoverDynamicCardVerificationCode_applicationTransactionCounter :: Lens.Lens' DiscoverDynamicCardVerificationCode Prelude.Text
discoverDynamicCardVerificationCode_applicationTransactionCounter = Lens.lens (\DiscoverDynamicCardVerificationCode' {applicationTransactionCounter} -> applicationTransactionCounter) (\s@DiscoverDynamicCardVerificationCode' {} a -> s {applicationTransactionCounter = a} :: DiscoverDynamicCardVerificationCode)

-- | The expiry date of a payment card.
discoverDynamicCardVerificationCode_cardExpiryDate :: Lens.Lens' DiscoverDynamicCardVerificationCode Prelude.Text
discoverDynamicCardVerificationCode_cardExpiryDate = Lens.lens (\DiscoverDynamicCardVerificationCode' {cardExpiryDate} -> cardExpiryDate) (\s@DiscoverDynamicCardVerificationCode' {} a -> s {cardExpiryDate = a} :: DiscoverDynamicCardVerificationCode)

-- | A random number that is generated by the issuer.
discoverDynamicCardVerificationCode_unpredictableNumber :: Lens.Lens' DiscoverDynamicCardVerificationCode Prelude.Text
discoverDynamicCardVerificationCode_unpredictableNumber = Lens.lens (\DiscoverDynamicCardVerificationCode' {unpredictableNumber} -> unpredictableNumber) (\s@DiscoverDynamicCardVerificationCode' {} a -> s {unpredictableNumber = a} :: DiscoverDynamicCardVerificationCode)

instance
  Prelude.Hashable
    DiscoverDynamicCardVerificationCode
  where
  hashWithSalt
    _salt
    DiscoverDynamicCardVerificationCode' {..} =
      _salt
        `Prelude.hashWithSalt` applicationTransactionCounter
        `Prelude.hashWithSalt` cardExpiryDate
        `Prelude.hashWithSalt` unpredictableNumber

instance
  Prelude.NFData
    DiscoverDynamicCardVerificationCode
  where
  rnf DiscoverDynamicCardVerificationCode' {..} =
    Prelude.rnf applicationTransactionCounter
      `Prelude.seq` Prelude.rnf cardExpiryDate
      `Prelude.seq` Prelude.rnf unpredictableNumber

instance
  Data.ToJSON
    DiscoverDynamicCardVerificationCode
  where
  toJSON DiscoverDynamicCardVerificationCode' {..} =
    Data.object
      ( Prelude.catMaybes
          [ Prelude.Just
              ( "ApplicationTransactionCounter"
                  Data..= applicationTransactionCounter
              ),
            Prelude.Just
              ("CardExpiryDate" Data..= cardExpiryDate),
            Prelude.Just
              ("UnpredictableNumber" Data..= unpredictableNumber)
          ]
      )
