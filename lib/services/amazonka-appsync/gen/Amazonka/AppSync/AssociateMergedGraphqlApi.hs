{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-binds #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Amazonka.AppSync.AssociateMergedGraphqlApi
-- Copyright   : (c) 2013-2023 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Creates an association between a Merged API and source API using the
-- source API\'s identifier.
module Amazonka.AppSync.AssociateMergedGraphqlApi
  ( -- * Creating a Request
    AssociateMergedGraphqlApi (..),
    newAssociateMergedGraphqlApi,

    -- * Request Lenses
    associateMergedGraphqlApi_description,
    associateMergedGraphqlApi_sourceApiAssociationConfig,
    associateMergedGraphqlApi_sourceApiIdentifier,
    associateMergedGraphqlApi_mergedApiIdentifier,

    -- * Destructuring the Response
    AssociateMergedGraphqlApiResponse (..),
    newAssociateMergedGraphqlApiResponse,

    -- * Response Lenses
    associateMergedGraphqlApiResponse_sourceApiAssociation,
    associateMergedGraphqlApiResponse_httpStatus,
  )
where

import Amazonka.AppSync.Types
import qualified Amazonka.Core as Core
import qualified Amazonka.Core.Lens.Internal as Lens
import qualified Amazonka.Data as Data
import qualified Amazonka.Prelude as Prelude
import qualified Amazonka.Request as Request
import qualified Amazonka.Response as Response

-- | /See:/ 'newAssociateMergedGraphqlApi' smart constructor.
data AssociateMergedGraphqlApi = AssociateMergedGraphqlApi'
  { -- | The description field.
    description :: Prelude.Maybe Prelude.Text,
    -- | The @SourceApiAssociationConfig@ object data.
    sourceApiAssociationConfig :: Prelude.Maybe SourceApiAssociationConfig,
    -- | The identifier of the AppSync Source API. This is generated by the
    -- AppSync service. In most cases, source APIs (especially in your account)
    -- only require the API ID value or ARN of the source API. However, source
    -- APIs from other accounts (cross-account use cases) strictly require the
    -- full resource ARN of the source API.
    sourceApiIdentifier :: Prelude.Text,
    -- | The identifier of the AppSync Merged API. This is generated by the
    -- AppSync service. In most cases, Merged APIs (especially in your account)
    -- only require the API ID value or ARN of the merged API. However, Merged
    -- APIs in other accounts (cross-account use cases) strictly require the
    -- full resource ARN of the merged API.
    mergedApiIdentifier :: Prelude.Text
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'AssociateMergedGraphqlApi' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'description', 'associateMergedGraphqlApi_description' - The description field.
--
-- 'sourceApiAssociationConfig', 'associateMergedGraphqlApi_sourceApiAssociationConfig' - The @SourceApiAssociationConfig@ object data.
--
-- 'sourceApiIdentifier', 'associateMergedGraphqlApi_sourceApiIdentifier' - The identifier of the AppSync Source API. This is generated by the
-- AppSync service. In most cases, source APIs (especially in your account)
-- only require the API ID value or ARN of the source API. However, source
-- APIs from other accounts (cross-account use cases) strictly require the
-- full resource ARN of the source API.
--
-- 'mergedApiIdentifier', 'associateMergedGraphqlApi_mergedApiIdentifier' - The identifier of the AppSync Merged API. This is generated by the
-- AppSync service. In most cases, Merged APIs (especially in your account)
-- only require the API ID value or ARN of the merged API. However, Merged
-- APIs in other accounts (cross-account use cases) strictly require the
-- full resource ARN of the merged API.
newAssociateMergedGraphqlApi ::
  -- | 'sourceApiIdentifier'
  Prelude.Text ->
  -- | 'mergedApiIdentifier'
  Prelude.Text ->
  AssociateMergedGraphqlApi
newAssociateMergedGraphqlApi
  pSourceApiIdentifier_
  pMergedApiIdentifier_ =
    AssociateMergedGraphqlApi'
      { description =
          Prelude.Nothing,
        sourceApiAssociationConfig = Prelude.Nothing,
        sourceApiIdentifier = pSourceApiIdentifier_,
        mergedApiIdentifier = pMergedApiIdentifier_
      }

-- | The description field.
associateMergedGraphqlApi_description :: Lens.Lens' AssociateMergedGraphqlApi (Prelude.Maybe Prelude.Text)
associateMergedGraphqlApi_description = Lens.lens (\AssociateMergedGraphqlApi' {description} -> description) (\s@AssociateMergedGraphqlApi' {} a -> s {description = a} :: AssociateMergedGraphqlApi)

-- | The @SourceApiAssociationConfig@ object data.
associateMergedGraphqlApi_sourceApiAssociationConfig :: Lens.Lens' AssociateMergedGraphqlApi (Prelude.Maybe SourceApiAssociationConfig)
associateMergedGraphqlApi_sourceApiAssociationConfig = Lens.lens (\AssociateMergedGraphqlApi' {sourceApiAssociationConfig} -> sourceApiAssociationConfig) (\s@AssociateMergedGraphqlApi' {} a -> s {sourceApiAssociationConfig = a} :: AssociateMergedGraphqlApi)

-- | The identifier of the AppSync Source API. This is generated by the
-- AppSync service. In most cases, source APIs (especially in your account)
-- only require the API ID value or ARN of the source API. However, source
-- APIs from other accounts (cross-account use cases) strictly require the
-- full resource ARN of the source API.
associateMergedGraphqlApi_sourceApiIdentifier :: Lens.Lens' AssociateMergedGraphqlApi Prelude.Text
associateMergedGraphqlApi_sourceApiIdentifier = Lens.lens (\AssociateMergedGraphqlApi' {sourceApiIdentifier} -> sourceApiIdentifier) (\s@AssociateMergedGraphqlApi' {} a -> s {sourceApiIdentifier = a} :: AssociateMergedGraphqlApi)

-- | The identifier of the AppSync Merged API. This is generated by the
-- AppSync service. In most cases, Merged APIs (especially in your account)
-- only require the API ID value or ARN of the merged API. However, Merged
-- APIs in other accounts (cross-account use cases) strictly require the
-- full resource ARN of the merged API.
associateMergedGraphqlApi_mergedApiIdentifier :: Lens.Lens' AssociateMergedGraphqlApi Prelude.Text
associateMergedGraphqlApi_mergedApiIdentifier = Lens.lens (\AssociateMergedGraphqlApi' {mergedApiIdentifier} -> mergedApiIdentifier) (\s@AssociateMergedGraphqlApi' {} a -> s {mergedApiIdentifier = a} :: AssociateMergedGraphqlApi)

instance Core.AWSRequest AssociateMergedGraphqlApi where
  type
    AWSResponse AssociateMergedGraphqlApi =
      AssociateMergedGraphqlApiResponse
  request overrides =
    Request.postJSON (overrides defaultService)
  response =
    Response.receiveJSON
      ( \s h x ->
          AssociateMergedGraphqlApiResponse'
            Prelude.<$> (x Data..?> "sourceApiAssociation")
            Prelude.<*> (Prelude.pure (Prelude.fromEnum s))
      )

instance Prelude.Hashable AssociateMergedGraphqlApi where
  hashWithSalt _salt AssociateMergedGraphqlApi' {..} =
    _salt
      `Prelude.hashWithSalt` description
      `Prelude.hashWithSalt` sourceApiAssociationConfig
      `Prelude.hashWithSalt` sourceApiIdentifier
      `Prelude.hashWithSalt` mergedApiIdentifier

instance Prelude.NFData AssociateMergedGraphqlApi where
  rnf AssociateMergedGraphqlApi' {..} =
    Prelude.rnf description
      `Prelude.seq` Prelude.rnf sourceApiAssociationConfig
      `Prelude.seq` Prelude.rnf sourceApiIdentifier
      `Prelude.seq` Prelude.rnf mergedApiIdentifier

instance Data.ToHeaders AssociateMergedGraphqlApi where
  toHeaders =
    Prelude.const
      ( Prelude.mconcat
          [ "Content-Type"
              Data.=# ( "application/x-amz-json-1.1" ::
                          Prelude.ByteString
                      )
          ]
      )

instance Data.ToJSON AssociateMergedGraphqlApi where
  toJSON AssociateMergedGraphqlApi' {..} =
    Data.object
      ( Prelude.catMaybes
          [ ("description" Data..=) Prelude.<$> description,
            ("sourceApiAssociationConfig" Data..=)
              Prelude.<$> sourceApiAssociationConfig,
            Prelude.Just
              ("mergedApiIdentifier" Data..= mergedApiIdentifier)
          ]
      )

instance Data.ToPath AssociateMergedGraphqlApi where
  toPath AssociateMergedGraphqlApi' {..} =
    Prelude.mconcat
      [ "/v1/sourceApis/",
        Data.toBS sourceApiIdentifier,
        "/mergedApiAssociations"
      ]

instance Data.ToQuery AssociateMergedGraphqlApi where
  toQuery = Prelude.const Prelude.mempty

-- | /See:/ 'newAssociateMergedGraphqlApiResponse' smart constructor.
data AssociateMergedGraphqlApiResponse = AssociateMergedGraphqlApiResponse'
  { -- | The @SourceApiAssociation@ object data.
    sourceApiAssociation :: Prelude.Maybe SourceApiAssociation,
    -- | The response's http status code.
    httpStatus :: Prelude.Int
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'AssociateMergedGraphqlApiResponse' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'sourceApiAssociation', 'associateMergedGraphqlApiResponse_sourceApiAssociation' - The @SourceApiAssociation@ object data.
--
-- 'httpStatus', 'associateMergedGraphqlApiResponse_httpStatus' - The response's http status code.
newAssociateMergedGraphqlApiResponse ::
  -- | 'httpStatus'
  Prelude.Int ->
  AssociateMergedGraphqlApiResponse
newAssociateMergedGraphqlApiResponse pHttpStatus_ =
  AssociateMergedGraphqlApiResponse'
    { sourceApiAssociation =
        Prelude.Nothing,
      httpStatus = pHttpStatus_
    }

-- | The @SourceApiAssociation@ object data.
associateMergedGraphqlApiResponse_sourceApiAssociation :: Lens.Lens' AssociateMergedGraphqlApiResponse (Prelude.Maybe SourceApiAssociation)
associateMergedGraphqlApiResponse_sourceApiAssociation = Lens.lens (\AssociateMergedGraphqlApiResponse' {sourceApiAssociation} -> sourceApiAssociation) (\s@AssociateMergedGraphqlApiResponse' {} a -> s {sourceApiAssociation = a} :: AssociateMergedGraphqlApiResponse)

-- | The response's http status code.
associateMergedGraphqlApiResponse_httpStatus :: Lens.Lens' AssociateMergedGraphqlApiResponse Prelude.Int
associateMergedGraphqlApiResponse_httpStatus = Lens.lens (\AssociateMergedGraphqlApiResponse' {httpStatus} -> httpStatus) (\s@AssociateMergedGraphqlApiResponse' {} a -> s {httpStatus = a} :: AssociateMergedGraphqlApiResponse)

instance
  Prelude.NFData
    AssociateMergedGraphqlApiResponse
  where
  rnf AssociateMergedGraphqlApiResponse' {..} =
    Prelude.rnf sourceApiAssociation
      `Prelude.seq` Prelude.rnf httpStatus
