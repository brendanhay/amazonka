{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Amazonka.SecurityHub.Types.AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails
-- Copyright   : (c) 2013-2023 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Amazonka.SecurityHub.Types.AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails where

import qualified Amazonka.Core as Core
import qualified Amazonka.Core.Lens.Internal as Lens
import qualified Amazonka.Data as Data
import qualified Amazonka.Prelude as Prelude
import Amazonka.SecurityHub.Types.AwsGuardDutyDetectorDataSourcesMalwareProtectionScanEc2InstanceWithFindingsDetails

-- | An object that contains information on the status of Malware Protection
-- as a data source for the detector.
--
-- /See:/ 'newAwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' smart constructor.
data AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails = AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails'
  { -- | Describes the configuration of Malware Protection for EC2 instances with
    -- findings.
    scanEc2InstanceWithFindings :: Prelude.Maybe AwsGuardDutyDetectorDataSourcesMalwareProtectionScanEc2InstanceWithFindingsDetails,
    -- | The GuardDuty Malware Protection service role.
    serviceRole :: Prelude.Maybe Prelude.Text
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'scanEc2InstanceWithFindings', 'awsGuardDutyDetectorDataSourcesMalwareProtectionDetails_scanEc2InstanceWithFindings' - Describes the configuration of Malware Protection for EC2 instances with
-- findings.
--
-- 'serviceRole', 'awsGuardDutyDetectorDataSourcesMalwareProtectionDetails_serviceRole' - The GuardDuty Malware Protection service role.
newAwsGuardDutyDetectorDataSourcesMalwareProtectionDetails ::
  AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails
newAwsGuardDutyDetectorDataSourcesMalwareProtectionDetails =
  AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails'
    { scanEc2InstanceWithFindings =
        Prelude.Nothing,
      serviceRole =
        Prelude.Nothing
    }

-- | Describes the configuration of Malware Protection for EC2 instances with
-- findings.
awsGuardDutyDetectorDataSourcesMalwareProtectionDetails_scanEc2InstanceWithFindings :: Lens.Lens' AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails (Prelude.Maybe AwsGuardDutyDetectorDataSourcesMalwareProtectionScanEc2InstanceWithFindingsDetails)
awsGuardDutyDetectorDataSourcesMalwareProtectionDetails_scanEc2InstanceWithFindings = Lens.lens (\AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' {scanEc2InstanceWithFindings} -> scanEc2InstanceWithFindings) (\s@AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' {} a -> s {scanEc2InstanceWithFindings = a} :: AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails)

-- | The GuardDuty Malware Protection service role.
awsGuardDutyDetectorDataSourcesMalwareProtectionDetails_serviceRole :: Lens.Lens' AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails (Prelude.Maybe Prelude.Text)
awsGuardDutyDetectorDataSourcesMalwareProtectionDetails_serviceRole = Lens.lens (\AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' {serviceRole} -> serviceRole) (\s@AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' {} a -> s {serviceRole = a} :: AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails)

instance
  Data.FromJSON
    AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails
  where
  parseJSON =
    Data.withObject
      "AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails"
      ( \x ->
          AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails'
            Prelude.<$> (x Data..:? "ScanEc2InstanceWithFindings")
            Prelude.<*> (x Data..:? "ServiceRole")
      )

instance
  Prelude.Hashable
    AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails
  where
  hashWithSalt
    _salt
    AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' {..} =
      _salt
        `Prelude.hashWithSalt` scanEc2InstanceWithFindings
        `Prelude.hashWithSalt` serviceRole

instance
  Prelude.NFData
    AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails
  where
  rnf
    AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' {..} =
      Prelude.rnf scanEc2InstanceWithFindings
        `Prelude.seq` Prelude.rnf serviceRole

instance
  Data.ToJSON
    AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails
  where
  toJSON
    AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails' {..} =
      Data.object
        ( Prelude.catMaybes
            [ ("ScanEc2InstanceWithFindings" Data..=)
                Prelude.<$> scanEc2InstanceWithFindings,
              ("ServiceRole" Data..=) Prelude.<$> serviceRole
            ]
        )
