name:                  amazonka-rds
version:               1.4.2
synopsis:              Amazon Relational Database Service SDK.
homepage:              https://github.com/brendanhay/amazonka
bug-reports:           https://github.com/brendanhay/amazonka/issues
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2016 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
cabal-version:         >= 1.10
extra-source-files:    README.md fixture/*.yaml fixture/*.proto
description:
    Amazon Relational Database Service

    Amazon Relational Database Service (Amazon RDS) is a web service that
    makes it easier to set up, operate, and scale a relational database in
    the cloud. It provides cost-efficient, resizeable capacity for an
    industry-standard relational database and manages common database
    administration tasks, freeing up developers to focus on what makes their
    applications and businesses unique.

    Amazon RDS gives you access to the capabilities of a MySQL, MariaDB,
    PostgreSQL, Microsoft SQL Server, Oracle, or Amazon Aurora database
    server. These capabilities mean that the code, applications, and tools
    you already use today with your existing databases work with Amazon RDS
    without modification. Amazon RDS automatically backs up your database
    and maintains the database software that powers your DB instance. Amazon
    RDS is flexible: you can scale your database instance\'s compute
    resources and storage capacity to meet your application\'s demand. As
    with all Amazon Web Services, there are no up-front investments, and you
    pay only for the resources you use.

    This interface reference for Amazon RDS contains documentation for a
    programming or command line interface you can use to manage Amazon RDS.
    Note that Amazon RDS is asynchronous, which means that some interfaces
    might require techniques such as polling or callback functions to
    determine when a command has been applied. In this reference, the
    parameter descriptions indicate whether a command is applied
    immediately, on the next instance reboot, or during the maintenance
    window. The reference structure is as follows, and we list following
    some related topics from the user guide.

    __Amazon RDS API Reference__

    -   For the alphabetical list of API actions, see
        <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Operations.html API Actions>.

    -   For the alphabetical list of data types, see
        <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Types.html Data Types>.

    -   For a list of common query parameters, see
        <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/CommonParameters.html Common Parameters>.

    -   For descriptions of the error codes, see
        <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/CommonErrors.html Common Errors>.

    __Amazon RDS User Guide__

    -   For a summary of the Amazon RDS interfaces, see
        <http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html#Welcome.Interfaces Available RDS Interfaces>.

    -   For more information about how to use the Query API, see
        <http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Using_the_Query_API.html Using the Query API>.
    .
    The types from this library are intended to be used with
    <http://hackage.haskell.org/package/amazonka amazonka>, which provides
    mechanisms for specifying AuthN/AuthZ information and sending requests.
    .
    Use of lenses is required for constructing and manipulating types.
    This is due to the amount of nesting of AWS types and transparency regarding
    de/serialisation into more palatable Haskell values.
    The provided lenses should be compatible with any of the major lens libraries
    such as <http://hackage.haskell.org/package/lens lens> or
    <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
    .
    See "Network.AWS.RDS" or <https://aws.amazon.com/documentation/ the AWS Documentation>
    to get started.

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.RDS
        , Network.AWS.RDS.AddSourceIdentifierToSubscription
        , Network.AWS.RDS.AddTagsToResource
        , Network.AWS.RDS.ApplyPendingMaintenanceAction
        , Network.AWS.RDS.AuthorizeDBSecurityGroupIngress
        , Network.AWS.RDS.CopyDBClusterSnapshot
        , Network.AWS.RDS.CopyDBParameterGroup
        , Network.AWS.RDS.CopyDBSnapshot
        , Network.AWS.RDS.CopyOptionGroup
        , Network.AWS.RDS.CreateDBCluster
        , Network.AWS.RDS.CreateDBClusterParameterGroup
        , Network.AWS.RDS.CreateDBClusterSnapshot
        , Network.AWS.RDS.CreateDBInstance
        , Network.AWS.RDS.CreateDBInstanceReadReplica
        , Network.AWS.RDS.CreateDBParameterGroup
        , Network.AWS.RDS.CreateDBSecurityGroup
        , Network.AWS.RDS.CreateDBSnapshot
        , Network.AWS.RDS.CreateDBSubnetGroup
        , Network.AWS.RDS.CreateEventSubscription
        , Network.AWS.RDS.CreateOptionGroup
        , Network.AWS.RDS.DeleteDBCluster
        , Network.AWS.RDS.DeleteDBClusterParameterGroup
        , Network.AWS.RDS.DeleteDBClusterSnapshot
        , Network.AWS.RDS.DeleteDBInstance
        , Network.AWS.RDS.DeleteDBParameterGroup
        , Network.AWS.RDS.DeleteDBSecurityGroup
        , Network.AWS.RDS.DeleteDBSnapshot
        , Network.AWS.RDS.DeleteDBSubnetGroup
        , Network.AWS.RDS.DeleteEventSubscription
        , Network.AWS.RDS.DeleteOptionGroup
        , Network.AWS.RDS.DescribeAccountAttributes
        , Network.AWS.RDS.DescribeCertificates
        , Network.AWS.RDS.DescribeDBClusterParameterGroups
        , Network.AWS.RDS.DescribeDBClusterParameters
        , Network.AWS.RDS.DescribeDBClusterSnapshots
        , Network.AWS.RDS.DescribeDBClusters
        , Network.AWS.RDS.DescribeDBEngineVersions
        , Network.AWS.RDS.DescribeDBInstances
        , Network.AWS.RDS.DescribeDBLogFiles
        , Network.AWS.RDS.DescribeDBParameterGroups
        , Network.AWS.RDS.DescribeDBParameters
        , Network.AWS.RDS.DescribeDBSecurityGroups
        , Network.AWS.RDS.DescribeDBSnapshotAttributes
        , Network.AWS.RDS.DescribeDBSnapshots
        , Network.AWS.RDS.DescribeDBSubnetGroups
        , Network.AWS.RDS.DescribeEngineDefaultClusterParameters
        , Network.AWS.RDS.DescribeEngineDefaultParameters
        , Network.AWS.RDS.DescribeEventCategories
        , Network.AWS.RDS.DescribeEventSubscriptions
        , Network.AWS.RDS.DescribeEvents
        , Network.AWS.RDS.DescribeOptionGroupOptions
        , Network.AWS.RDS.DescribeOptionGroups
        , Network.AWS.RDS.DescribeOrderableDBInstanceOptions
        , Network.AWS.RDS.DescribePendingMaintenanceActions
        , Network.AWS.RDS.DescribeReservedDBInstances
        , Network.AWS.RDS.DescribeReservedDBInstancesOfferings
        , Network.AWS.RDS.DownloadDBLogFilePortion
        , Network.AWS.RDS.FailoverDBCluster
        , Network.AWS.RDS.ListTagsForResource
        , Network.AWS.RDS.ModifyDBCluster
        , Network.AWS.RDS.ModifyDBClusterParameterGroup
        , Network.AWS.RDS.ModifyDBInstance
        , Network.AWS.RDS.ModifyDBParameterGroup
        , Network.AWS.RDS.ModifyDBSnapshotAttribute
        , Network.AWS.RDS.ModifyDBSubnetGroup
        , Network.AWS.RDS.ModifyEventSubscription
        , Network.AWS.RDS.ModifyOptionGroup
        , Network.AWS.RDS.PromoteReadReplica
        , Network.AWS.RDS.PurchaseReservedDBInstancesOffering
        , Network.AWS.RDS.RebootDBInstance
        , Network.AWS.RDS.RemoveSourceIdentifierFromSubscription
        , Network.AWS.RDS.RemoveTagsFromResource
        , Network.AWS.RDS.ResetDBClusterParameterGroup
        , Network.AWS.RDS.ResetDBParameterGroup
        , Network.AWS.RDS.RestoreDBClusterFromSnapshot
        , Network.AWS.RDS.RestoreDBClusterToPointInTime
        , Network.AWS.RDS.RestoreDBInstanceFromDBSnapshot
        , Network.AWS.RDS.RestoreDBInstanceToPointInTime
        , Network.AWS.RDS.RevokeDBSecurityGroupIngress
        , Network.AWS.RDS.Types
        , Network.AWS.RDS.Waiters

    other-modules:
          Network.AWS.RDS.Types.Product
        , Network.AWS.RDS.Types.Sum

    build-depends:
          amazonka-core == 1.4.2.*
        , base          >= 4.7     && < 5

test-suite amazonka-rds-test
    type:              exitcode-stdio-1.0
    default-language:  Haskell2010
    hs-source-dirs:    test
    main-is:           Main.hs

    ghc-options:       -Wall -threaded

    -- This section is encoded by the template and any modules added by
    -- hand outside these namespaces will not correctly be added to the
    -- distribution package.
    other-modules:
          Test.AWS.RDS
        , Test.AWS.Gen.RDS
        , Test.AWS.RDS.Internal

    build-depends:
          amazonka-core == 1.4.2.*
        , amazonka-test == 1.4.2.*
        , amazonka-rds == 1.4.2.*
        , base
        , bytestring
        , tasty
        , tasty-hunit
        , text
        , time
        , unordered-containers
