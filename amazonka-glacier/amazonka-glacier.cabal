name:                  amazonka-glacier
version:               1.4.2
synopsis:              Amazon Glacier SDK.
homepage:              https://github.com/brendanhay/amazonka
bug-reports:           https://github.com/brendanhay/amazonka/issues
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2016 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
cabal-version:         >= 1.10
extra-source-files:    README.md fixture/*.yaml fixture/*.proto
description:
    Amazon Glacier is a storage solution for \"cold data.\"

    Amazon Glacier is an extremely low-cost storage service that provides
    secure, durable, and easy-to-use storage for data backup and archival.
    With Amazon Glacier, customers can store their data cost effectively for
    months, years, or decades. Amazon Glacier also enables customers to
    offload the administrative burdens of operating and scaling storage to
    AWS, so they don\'t have to worry about capacity planning, hardware
    provisioning, data replication, hardware failure and recovery, or
    time-consuming hardware migrations.

    Amazon Glacier is a great storage choice when low storage cost is
    paramount, your data is rarely retrieved, and retrieval latency of
    several hours is acceptable. If your application requires fast or
    frequent access to your data, consider using Amazon S3. For more
    information, go to
    <http://aws.amazon.com/s3/ Amazon Simple Storage Service (Amazon S3)>.

    You can store any kind of data in any format. There is no maximum limit
    on the total amount of data you can store in Amazon Glacier.

    If you are a first-time user of Amazon Glacier, we recommend that you
    begin by reading the following sections in the /Amazon Glacier Developer
    Guide/:

    -   <http://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html What is Amazon Glacier>
        - This section of the Developer Guide describes the underlying data
        model, the operations it supports, and the AWS SDKs that you can use
        to interact with the service.

    -   <http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html Getting Started with Amazon Glacier>
        - The Getting Started section walks you through the process of
        creating a vault, uploading archives, creating jobs to download
        archives, retrieving the job output, and deleting archives.
    .
    The types from this library are intended to be used with
    <http://hackage.haskell.org/package/amazonka amazonka>, which provides
    mechanisms for specifying AuthN/AuthZ information and sending requests.
    .
    Use of lenses is required for constructing and manipulating types.
    This is due to the amount of nesting of AWS types and transparency regarding
    de/serialisation into more palatable Haskell values.
    The provided lenses should be compatible with any of the major lens libraries
    such as <http://hackage.haskell.org/package/lens lens> or
    <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
    .
    See "Network.AWS.Glacier" or <https://aws.amazon.com/documentation/ the AWS Documentation>
    to get started.

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.Glacier
        , Network.AWS.Glacier.AbortMultipartUpload
        , Network.AWS.Glacier.AbortVaultLock
        , Network.AWS.Glacier.AddTagsToVault
        , Network.AWS.Glacier.CompleteMultipartUpload
        , Network.AWS.Glacier.CompleteVaultLock
        , Network.AWS.Glacier.CreateVault
        , Network.AWS.Glacier.DeleteArchive
        , Network.AWS.Glacier.DeleteVault
        , Network.AWS.Glacier.DeleteVaultAccessPolicy
        , Network.AWS.Glacier.DeleteVaultNotifications
        , Network.AWS.Glacier.DescribeJob
        , Network.AWS.Glacier.DescribeVault
        , Network.AWS.Glacier.GetDataRetrievalPolicy
        , Network.AWS.Glacier.GetJobOutput
        , Network.AWS.Glacier.GetVaultAccessPolicy
        , Network.AWS.Glacier.GetVaultLock
        , Network.AWS.Glacier.GetVaultNotifications
        , Network.AWS.Glacier.InitiateJob
        , Network.AWS.Glacier.InitiateMultipartUpload
        , Network.AWS.Glacier.InitiateVaultLock
        , Network.AWS.Glacier.ListJobs
        , Network.AWS.Glacier.ListMultipartUploads
        , Network.AWS.Glacier.ListParts
        , Network.AWS.Glacier.ListTagsForVault
        , Network.AWS.Glacier.ListVaults
        , Network.AWS.Glacier.RemoveTagsFromVault
        , Network.AWS.Glacier.SetDataRetrievalPolicy
        , Network.AWS.Glacier.SetVaultAccessPolicy
        , Network.AWS.Glacier.SetVaultNotifications
        , Network.AWS.Glacier.Types
        , Network.AWS.Glacier.UploadArchive
        , Network.AWS.Glacier.UploadMultipartPart
        , Network.AWS.Glacier.Waiters

    other-modules:
          Network.AWS.Glacier.Types.Product
        , Network.AWS.Glacier.Types.Sum

    build-depends:
          amazonka-core == 1.4.2.*
        , base          >= 4.7     && < 5

test-suite amazonka-glacier-test
    type:              exitcode-stdio-1.0
    default-language:  Haskell2010
    hs-source-dirs:    test
    main-is:           Main.hs

    ghc-options:       -Wall -threaded

    -- This section is encoded by the template and any modules added by
    -- hand outside these namespaces will not correctly be added to the
    -- distribution package.
    other-modules:
          Test.AWS.Glacier
        , Test.AWS.Gen.Glacier
        , Test.AWS.Glacier.Internal

    build-depends:
          amazonka-core == 1.4.2.*
        , amazonka-test == 1.4.2.*
        , amazonka-glacier == 1.4.2.*
        , base
        , bytestring
        , tasty
        , tasty-hunit
        , text
        , time
        , unordered-containers
