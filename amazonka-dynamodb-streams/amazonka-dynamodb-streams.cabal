name:                  amazonka-dynamodb-streams
version:               1.0.2
synopsis:              Amazon DynamoDB Streams SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2015 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    Amazon DynamoDB Streams

    This is the Amazon DynamoDB Streams API Reference. This guide describes
    the low-level API actions for accessing streams and processing stream
    records. For information about application development with DynamoDB
    Streams, see the
    <http://docs.aws.amazon.com/amazondynamodb/latest/developerguide//Streams.html Amazon DynamoDB Developer Guide>.

    Note that this document is intended for use with the following DynamoDB
    documentation:

    -   <http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ Amazon DynamoDB Developer Guide>

    -   <http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/ Amazon DynamoDB API Reference>

    The following are short descriptions of each low-level DynamoDB Streams
    API action, organized by function.

    -   /DescribeStream/ - Returns detailed information about a particular
        stream.

    -   /GetRecords/ - Retrieves the stream records from within a shard.

    -   /GetShardIterator/ - Returns information on how to retrieve the
        streams record from a shard with a given shard ID.

    -   /ListStreams/ - Returns a list of all the streams associated with
        the current AWS account and endpoint.
    .
    The types from this library are intended to be used with
    <http://hackage.haskell.org/package/amazonka amazonka>, which provides
    mechanisms for specifying AuthN/AuthZ information and sending requests.
    .
    Use of lenses is required for constructing and manipulating types.
    This is due to the amount of nesting of AWS types and transparency regarding
    de/serialisation into more palatable Haskell values.
    The provided lenses should be compatible with any of the major lens libraries
    such as <http://hackage.haskell.org/package/lens lens> or
    <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
    .
    See "Network.AWS.DynamoDBStreams" and the <http://dynamodb-preview.s3-website-us-west-2.amazonaws.com/docs/streams-api/Welcome.html AWS API Reference>
    to get started.

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.DynamoDBStreams
        , Network.AWS.DynamoDBStreams.DescribeStream
        , Network.AWS.DynamoDBStreams.GetRecords
        , Network.AWS.DynamoDBStreams.GetShardIterator
        , Network.AWS.DynamoDBStreams.ListStreams
        , Network.AWS.DynamoDBStreams.Types
        , Network.AWS.DynamoDBStreams.Waiters

    other-modules:
          Network.AWS.DynamoDBStreams.Types.Product
        , Network.AWS.DynamoDBStreams.Types.Sum

    build-depends:
          amazonka-core == 1.0.2.*
        , base          >= 4.7     && < 5

test-suite amazonka-dynamodb-streams-test
    type:              exitcode-stdio-1.0
    default-language:  Haskell2010
    hs-source-dirs:    test
    main-is:           Main.hs

    ghc-options:       -Wall -threaded

    -- This is not comprehensive if modules have manually been added.
    -- It exists to ensure cabal 'somewhat' detects test module changes.
    other-modules:
          Test.AWS.DynamoDBStreams
        , Test.AWS.Gen.DynamoDBStreams
        , Test.AWS.DynamoDBStreams.Internal

    build-depends:
          amazonka-core == 1.0.2
        , amazonka-test == 1.0.2
        , amazonka-dynamodb-streams == 1.0.2
        , base
        , bytestring
        , lens
        , tasty
        , tasty-hunit
        , text
        , time
        , unordered-containers
