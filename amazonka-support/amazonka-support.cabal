name:                  amazonka-support
version:               1.4.2
synopsis:              Amazon Support SDK.
homepage:              https://github.com/brendanhay/amazonka
bug-reports:           https://github.com/brendanhay/amazonka/issues
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2016 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
cabal-version:         >= 1.10
extra-source-files:    README.md fixture/*.yaml fixture/*.proto
description:
    AWS Support

    The AWS Support API reference is intended for programmers who need
    detailed information about the AWS Support operations and data types.
    This service enables you to manage your AWS Support cases
    programmatically. It uses HTTP methods that return results in JSON
    format.

    The AWS Support service also exposes a set of
    <https://aws.amazon.com/premiumsupport/trustedadvisor/ Trusted Advisor>
    features. You can retrieve a list of checks and their descriptions, get
    check results, specify checks to refresh, and get the refresh status of
    checks.

    The following list describes the AWS Support case management operations:

    -   __Service names, issue categories, and available severity levels.__
        The < DescribeServices> and < DescribeSeverityLevels> operations
        return AWS service names, service codes, service categories, and
        problem severity levels. You use these values when you call the
        < CreateCase> operation.
    -   __Case creation, case details, and case resolution.__ The
        < CreateCase>, < DescribeCases>, < DescribeAttachment>, and
        < ResolveCase> operations create AWS Support cases, retrieve
        information about cases, and resolve cases.
    -   __Case communication.__ The < DescribeCommunications>,
        < AddCommunicationToCase>, and < AddAttachmentsToSet> operations
        retrieve and add communications and attachments to AWS Support
        cases.

    The following list describes the operations available from the AWS
    Support service for Trusted Advisor:

    -   < DescribeTrustedAdvisorChecks> returns the list of checks that run
        against your AWS resources.
    -   Using the @CheckId@ for a specific check returned by
        < DescribeTrustedAdvisorChecks>, you can call
        < DescribeTrustedAdvisorCheckResult> to obtain the results for the
        check you specified.
    -   < DescribeTrustedAdvisorCheckSummaries> returns summarized results
        for one or more Trusted Advisor checks.
    -   < RefreshTrustedAdvisorCheck> requests that Trusted Advisor rerun a
        specified check.
    -   < DescribeTrustedAdvisorCheckRefreshStatuses> reports the refresh
        status of one or more checks.

    For authentication of requests, AWS Support uses
    <http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html Signature Version 4 Signing Process>.

    See
    <http://docs.aws.amazon.com/awssupport/latest/user/Welcome.html About the AWS Support API>
    in the /AWS Support User Guide/ for information about how to use this
    service to create and manage your support cases, and how to call Trusted
    Advisor for results of checks on your resources.
    .
    The types from this library are intended to be used with
    <http://hackage.haskell.org/package/amazonka amazonka>, which provides
    mechanisms for specifying AuthN/AuthZ information and sending requests.
    .
    Use of lenses is required for constructing and manipulating types.
    This is due to the amount of nesting of AWS types and transparency regarding
    de/serialisation into more palatable Haskell values.
    The provided lenses should be compatible with any of the major lens libraries
    such as <http://hackage.haskell.org/package/lens lens> or
    <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
    .
    See "Network.AWS.Support" or <https://aws.amazon.com/documentation/ the AWS Documentation>
    to get started.

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.Support
        , Network.AWS.Support.AddAttachmentsToSet
        , Network.AWS.Support.AddCommunicationToCase
        , Network.AWS.Support.CreateCase
        , Network.AWS.Support.DescribeAttachment
        , Network.AWS.Support.DescribeCases
        , Network.AWS.Support.DescribeCommunications
        , Network.AWS.Support.DescribeServices
        , Network.AWS.Support.DescribeSeverityLevels
        , Network.AWS.Support.DescribeTrustedAdvisorCheckRefreshStatuses
        , Network.AWS.Support.DescribeTrustedAdvisorCheckResult
        , Network.AWS.Support.DescribeTrustedAdvisorCheckSummaries
        , Network.AWS.Support.DescribeTrustedAdvisorChecks
        , Network.AWS.Support.RefreshTrustedAdvisorCheck
        , Network.AWS.Support.ResolveCase
        , Network.AWS.Support.Types
        , Network.AWS.Support.Waiters

    other-modules:
          Network.AWS.Support.Types.Product
        , Network.AWS.Support.Types.Sum

    build-depends:
          amazonka-core == 1.4.2.*
        , base          >= 4.7     && < 5

test-suite amazonka-support-test
    type:              exitcode-stdio-1.0
    default-language:  Haskell2010
    hs-source-dirs:    test
    main-is:           Main.hs

    ghc-options:       -Wall -threaded

    -- This section is encoded by the template and any modules added by
    -- hand outside these namespaces will not correctly be added to the
    -- distribution package.
    other-modules:
          Test.AWS.Support
        , Test.AWS.Gen.Support
        , Test.AWS.Support.Internal

    build-depends:
          amazonka-core == 1.4.2.*
        , amazonka-test == 1.4.2.*
        , amazonka-support == 1.4.2.*
        , base
        , bytestring
        , tasty
        , tasty-hunit
        , text
        , time
        , unordered-containers
